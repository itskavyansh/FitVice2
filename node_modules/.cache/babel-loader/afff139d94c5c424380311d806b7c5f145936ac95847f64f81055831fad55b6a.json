{"ast":null,"code":"var _jsxFileName = \"D:\\\\FitVice\\\\FitVice\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostureSense() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const stageRef = useRef(null);\n  const counterRef = useRef(0);\n  const [stage, setStage] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\n  const exercises = {\n    bicepCurls: {\n      name: \"Bicep Curls\",\n      downAngle: 160,\n      upAngle: 30,\n      invertStages: false,\n      isVertical: false,\n      joints: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      instructions: \"Stand with arms at sides, curl weights up to shoulders, then lower back down.\"\n    },\n    pushups: {\n      name: \"Push-ups\",\n      downAngle: 90,\n      upAngle: 30,\n      invertStages: true,\n      isVertical: true,\n      joints: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      instructions: \"Keep body straight, lower chest to ground, then push back up.\"\n    },\n    squats: {\n      name: \"Squats\",\n      downAngle: 90,\n      upAngle: 30,\n      invertStages: true,\n      isVertical: true,\n      joints: {\n        hip: 23,\n        knee: 25,\n        ankle: 27\n      },\n      instructions: \"Stand with feet shoulder-width apart, lower body until thighs are parallel to ground.\"\n    },\n    shoulderPress: {\n      name: \"Shoulder Press\",\n      downAngle: 160,\n      upAngle: 50,\n      invertStages: false,\n      isVertical: true,\n      joints: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      instructions: \"Start with weights at shoulder level, press overhead until arms are fully extended.\"\n    }\n  };\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          video.onloadedmetadata = () => {\n            video.play();\n            resolve();\n          };\n        });\n\n        // Initialize MediaPipe Pose\n        const mp = await import(\"@mediapipe/pose\");\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            const exercise = exercises[selectedExercise];\n\n            // Set canvas size to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Clear the canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Save the current context state\n            ctx.save();\n            // Scale the context horizontally to flip the image\n            ctx.scale(-1, 1);\n            ctx.translate(-canvas.width, 0);\n            // Draw video frame\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get coordinates based on selected exercise\n            const joint1 = [landmarks[exercise.joints.shoulder || exercise.joints.hip].x, landmarks[exercise.joints.shoulder || exercise.joints.hip].y];\n            const joint2 = [landmarks[exercise.joints.elbow || exercise.joints.knee].x, landmarks[exercise.joints.elbow || exercise.joints.knee].y];\n            const joint3 = [landmarks[exercise.joints.wrist || exercise.joints.ankle].x, landmarks[exercise.joints.wrist || exercise.joints.ankle].y];\n\n            // Calculate angle\n            const angle = Math.atan2(joint3[1] - joint2[1], joint3[0] - joint2[0]) - Math.atan2(joint1[1] - joint2[1], joint1[0] - joint2[0]);\n            let angleDegrees = Math.abs(angle * 180.0 / Math.PI);\n            if (angleDegrees > 180.0) {\n              angleDegrees = 360 - angleDegrees;\n            }\n\n            // Exercise counter logic with refs\n            if (exercise.invertStages) {\n              if (angleDegrees > exercise.downAngle) {\n                stageRef.current = \"DOWN\";\n                setStage(\"DOWN\");\n              }\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\n                stageRef.current = \"UP\";\n                setStage(\"UP\");\n                counterRef.current += 1;\n                setCounter(counterRef.current);\n              }\n            } else {\n              if (angleDegrees > exercise.downAngle) {\n                stageRef.current = \"DOWN\";\n                setStage(\"DOWN\");\n              }\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\n                stageRef.current = \"UP\";\n                setStage(\"UP\");\n                counterRef.current += 1;\n                setCounter(counterRef.current);\n              }\n            }\n\n            // Draw landmarks with color-coded tracking\n            const isCorrectForm = angleDegrees >= exercise.upAngle && angleDegrees <= exercise.downAngle;\n            const trackingColor = isCorrectForm ? \"#4CAF50\" : \"#F44336\"; // Green for correct, Red for incorrect\n            const formMessage = stageRef.current ? `GO ${selectedExercise === \"shoulderPress\" ? stageRef.current === \"DOWN\" ? \"DOWN\" : \"UP\" : stageRef.current === \"UP\" ? \"DOWN\" : \"UP\"}` : \"GO DOWN\";\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\n              color: trackingColor,\n              lineWidth: 2,\n              radius: 2\n            });\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\n              color: trackingColor,\n              lineWidth: 2,\n              radius: 2\n            });\n\n            // Restore the context state\n            ctx.restore();\n\n            // Draw angle with color-coded text\n            ctx.fillStyle = trackingColor;\n            ctx.font = \"20px Arial\";\n            ctx.fillText(`${Math.round(angleDegrees)}Â°`, (1 - joint2[0]) * canvas.width, joint2[1] * canvas.height);\n\n            // Draw counter and stage with form indicator\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            ctx.fillRect(0, 0, 200, 90);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"REPS\", 20, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(counterRef.current.toString(), 25, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(selectedExercise === \"shoulderPress\" && stageRef.current ? stageRef.current === \"DOWN\" ? \"UP\" : \"DOWN\" : stageRef.current || \"\", 100, 60);\n            // Add form indicator\n            ctx.fillStyle = trackingColor;\n            ctx.font = \"16px Arial\";\n            ctx.fillText(formMessage, 20, 85);\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, [selectedExercise]);\n  const handleExerciseChange = exercise => {\n    setSelectedExercise(exercise);\n    setCounter(0);\n    setStage(null);\n    stageRef.current = null;\n    counterRef.current = 0;\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              maxWidth: \"800px\",\n              margin: \"0 auto\",\n              backgroundColor: \"#f9fafb\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              border: \"1px solid rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n                padding: \"10px\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n                marginBottom: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MDBox, {\n                sx: {\n                  display: \"flex\",\n                  gap: \"10px\",\n                  justifyContent: \"center\"\n                },\n                children: Object.keys(exercises).map(exercise => /*#__PURE__*/_jsxDEV(MDButton, {\n                  variant: selectedExercise === exercise ? \"contained\" : \"outlined\",\n                  color: selectedExercise === exercise ? \"info\" : \"dark\",\n                  onClick: () => handleExerciseChange(exercise),\n                  size: \"small\",\n                  children: exercises[exercise].name\n                }, exercise, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                sx: {\n                  textAlign: \"center\",\n                  padding: \"10px\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                  borderRadius: \"4px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  color: \"info\",\n                  fontWeight: \"bold\",\n                  children: exercises[selectedExercise].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: exercises[selectedExercise].instructions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                opacity: 0,\n                zIndex: 1\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: \"100%\",\n                height: \"500px\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\",\n                position: \"relative\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                align: \"center\",\n                children: \"Loading camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                variant: \"contained\",\n                color: \"info\",\n                onClick: () => {\n                  setIsCameraActive(true);\n                  startCamera();\n                },\n                sx: {\n                  mt: 2\n                },\n                children: \"Start Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"xdjZP4RbpQTicRwr3ThFzTG+1Rs=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","MDBox","MDButton","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","PostureSense","_s","videoRef","canvasRef","stageRef","counterRef","stage","setStage","counter","setCounter","isCameraActive","setIsCameraActive","selectedExercise","setSelectedExercise","exercises","bicepCurls","name","downAngle","upAngle","invertStages","isVertical","joints","shoulder","elbow","wrist","instructions","pushups","squats","hip","knee","ankle","shoulderPress","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","current","srcObject","Promise","resolve","onloadedmetadata","play","mp","mp_drawing","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","landmarks","canvas","ctx","getContext","exercise","width","videoWidth","height","videoHeight","clearRect","save","scale","translate","drawImage","joint1","x","y","joint2","joint3","angle","Math","atan2","angleDegrees","abs","PI","isCorrectForm","trackingColor","formMessage","drawConnectors","POSE_CONNECTIONS","color","lineWidth","radius","drawLandmarks","restore","fillStyle","font","fillText","round","fillRect","toString","processFrame","readyState","HAVE_ENOUGH_DATA","send","image","requestAnimationFrame","error","console","cancelAnimationFrame","getTracks","forEach","track","stop","close","handleExerciseChange","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","sx","position","maxWidth","margin","backgroundColor","borderRadius","padding","border","display","flexDirection","gap","boxShadow","marginBottom","justifyContent","Object","keys","map","onClick","size","textAlign","ref","style","objectFit","opacity","zIndex","autoPlay","playsInline","alignItems","align","mt","_c","$RefreshReg$"],"sources":["D:/FitVice/FitVice/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const stageRef = useRef(null);\r\n  const counterRef = useRef(0);\r\n  const [stage, setStage] = useState(null);\r\n  const [counter, setCounter] = useState(0);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\r\n\r\n  const exercises = {\r\n    bicepCurls: {\r\n      name: \"Bicep Curls\",\r\n      downAngle: 160,\r\n      upAngle: 30,\r\n      invertStages: false,\r\n      isVertical: false,\r\n      joints: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15\r\n      },\r\n      instructions: \"Stand with arms at sides, curl weights up to shoulders, then lower back down.\"\r\n    },\r\n    pushups: {\r\n      name: \"Push-ups\",\r\n      downAngle: 90,\r\n      upAngle: 30,\r\n      invertStages: true,\r\n      isVertical: true,\r\n      joints: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15\r\n      },\r\n      instructions: \"Keep body straight, lower chest to ground, then push back up.\"\r\n    },\r\n    squats: {\r\n      name: \"Squats\",\r\n      downAngle: 90,\r\n      upAngle: 30,\r\n      invertStages: true,\r\n      isVertical: true,\r\n      joints: {\r\n        hip: 23,\r\n        knee: 25,\r\n        ankle: 27\r\n      },\r\n      instructions: \"Stand with feet shoulder-width apart, lower body until thighs are parallel to ground.\"\r\n    },\r\n    shoulderPress: {\r\n      name: \"Shoulder Press\",\r\n      downAngle: 160,\r\n      upAngle: 50,\r\n      invertStages: false,\r\n      isVertical: true,\r\n      joints: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15\r\n      },\r\n      instructions: \"Start with weights at shoulder level, press overhead until arms are fully extended.\"\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Wait for video to be ready\r\n        await new Promise((resolve) => {\r\n          video.onloadedmetadata = () => {\r\n            video.play();\r\n            resolve();\r\n          };\r\n        });\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import(\"@mediapipe/pose\");\r\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          },\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5,\r\n        });\r\n\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const exercise = exercises[selectedExercise];\r\n\r\n            // Set canvas size to match video\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n\r\n            // Clear the canvas\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Save the current context state\r\n            ctx.save();\r\n            // Scale the context horizontally to flip the image\r\n            ctx.scale(-1, 1);\r\n            ctx.translate(-canvas.width, 0);\r\n            // Draw video frame\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n            // Get coordinates based on selected exercise\r\n            const joint1 = [landmarks[exercise.joints.shoulder || exercise.joints.hip].x, landmarks[exercise.joints.shoulder || exercise.joints.hip].y];\r\n            const joint2 = [landmarks[exercise.joints.elbow || exercise.joints.knee].x, landmarks[exercise.joints.elbow || exercise.joints.knee].y];\r\n            const joint3 = [landmarks[exercise.joints.wrist || exercise.joints.ankle].x, landmarks[exercise.joints.wrist || exercise.joints.ankle].y];\r\n\r\n            // Calculate angle\r\n            const angle = Math.atan2(joint3[1] - joint2[1], joint3[0] - joint2[0]) -\r\n              Math.atan2(joint1[1] - joint2[1], joint1[0] - joint2[0]);\r\n            let angleDegrees = Math.abs((angle * 180.0) / Math.PI);\r\n\r\n            if (angleDegrees > 180.0) {\r\n              angleDegrees = 360 - angleDegrees;\r\n            }\r\n\r\n            // Exercise counter logic with refs\r\n            if (exercise.invertStages) {\r\n              if (angleDegrees > exercise.downAngle) {\r\n                stageRef.current = \"DOWN\";\r\n                setStage(\"DOWN\");\r\n              }\r\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\r\n                stageRef.current = \"UP\";\r\n                setStage(\"UP\");\r\n                counterRef.current += 1;\r\n                setCounter(counterRef.current);\r\n              }\r\n            } else {\r\n              if (angleDegrees > exercise.downAngle) {\r\n                stageRef.current = \"DOWN\";\r\n                setStage(\"DOWN\");\r\n              }\r\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\r\n                stageRef.current = \"UP\";\r\n                setStage(\"UP\");\r\n                counterRef.current += 1;\r\n                setCounter(counterRef.current);\r\n              }\r\n            }\r\n\r\n            // Draw landmarks with color-coded tracking\r\n            const isCorrectForm = angleDegrees >= exercise.upAngle && angleDegrees <= exercise.downAngle;\r\n            const trackingColor = isCorrectForm ? \"#4CAF50\" : \"#F44336\"; // Green for correct, Red for incorrect\r\n            const formMessage = stageRef.current \r\n              ? `GO ${selectedExercise === \"shoulderPress\" \r\n                  ? (stageRef.current === \"DOWN\" ? \"DOWN\" : \"UP\")\r\n                  : (stageRef.current === \"UP\" ? \"DOWN\" : \"UP\")}`\r\n              : \"GO DOWN\";\r\n\r\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\r\n              color: trackingColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\r\n              color: trackingColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n\r\n            // Restore the context state\r\n            ctx.restore();\r\n\r\n            // Draw angle with color-coded text\r\n            ctx.fillStyle = trackingColor;\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              `${Math.round(angleDegrees)}Â°`,\r\n              (1 - joint2[0]) * canvas.width,\r\n              joint2[1] * canvas.height\r\n            );\r\n\r\n            // Draw counter and stage with form indicator\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            ctx.fillRect(0, 0, 200, 90);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"REPS\", 20, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(counterRef.current.toString(), 25, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              selectedExercise === \"shoulderPress\" && stageRef.current\r\n                ? stageRef.current === \"DOWN\" ? \"UP\" : \"DOWN\"\r\n                : stageRef.current || \"\",\r\n              100, 60\r\n            );\r\n            // Add form indicator\r\n            ctx.fillStyle = trackingColor;\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(formMessage, 20, 85);\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, [selectedExercise]);\r\n\r\n  const handleExerciseChange = (exercise) => {\r\n    setSelectedExercise(exercise);\r\n    setCounter(0);\r\n    setStage(null);\r\n    stageRef.current = null;\r\n    counterRef.current = 0;\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                maxWidth: \"800px\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"#f9fafb\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              {/* Exercise Selection */}\r\n              <MDBox\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"10px\",\r\n                  backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"8px\",\r\n                  boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n              >\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    gap: \"10px\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                >\r\n                  {Object.keys(exercises).map((exercise) => (\r\n                    <MDButton\r\n                      key={exercise}\r\n                      variant={selectedExercise === exercise ? \"contained\" : \"outlined\"}\r\n                      color={selectedExercise === exercise ? \"info\" : \"dark\"}\r\n                      onClick={() => handleExerciseChange(exercise)}\r\n                      size=\"small\"\r\n                    >\r\n                      {exercises[exercise].name}\r\n                    </MDButton>\r\n                  ))}\r\n                </MDBox>\r\n                <MDBox\r\n                  sx={{\r\n                    textAlign: \"center\",\r\n                    padding: \"10px\",\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                    borderRadius: \"4px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\" color=\"info\" fontWeight=\"bold\">\r\n                    {exercises[selectedExercise].name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {exercises[selectedExercise].instructions}\r\n                  </Typography>\r\n                </MDBox>\r\n              </MDBox>\r\n\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  opacity: 0,\r\n                  zIndex: 1,\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"500px\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n              {!isCameraActive && (\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"500px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                    Loading camera...\r\n                  </Typography>\r\n                  <MDButton\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    onClick={() => {\r\n                      setIsCameraActive(true);\r\n                      startCamera();\r\n                    }}\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    Start Camera\r\n                  </MDButton>\r\n                </MDBox>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}