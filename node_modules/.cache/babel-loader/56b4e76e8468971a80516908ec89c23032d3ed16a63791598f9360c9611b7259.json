{"ast":null,"code":"var _jsxFileName = \"D:\\\\FitVice\\\\FitVice\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\n// Exercise configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercises = {\n  bicepCurls: {\n    name: \"Bicep Curls\",\n    instructions: [\"Stand with your back straight and arms at your sides\", \"Keep your elbows close to your body\", \"Curl both arms up until your biceps are fully contracted\", \"Lower your arms back down with controlled movement\"],\n    landmarks: {\n      left: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      right: {\n        shoulder: 12,\n        elbow: 14,\n        wrist: 16\n      }\n    },\n    downAngle: 160,\n    upAngle: 30\n  }\n};\nfunction PostureSense() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stage, setStage] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          video.onloadedmetadata = () => {\n            video.play();\n            resolve();\n          };\n        });\n\n        // Initialize MediaPipe Pose\n        const mp = await import(\"@mediapipe/pose\");\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n\n            // Set canvas size to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Clear the canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Save the current context state\n            ctx.save();\n            // Scale the context horizontally to flip the image\n            ctx.scale(-1, 1);\n            ctx.translate(-canvas.width, 0);\n            // Draw video frame\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get coordinates\n            const shoulder = [landmarks[11].x, landmarks[11].y];\n            const elbow = [landmarks[13].x, landmarks[13].y];\n            const wrist = [landmarks[15].x, landmarks[15].y];\n\n            // Calculate angle\n            const angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) - Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\n            const angleDegrees = Math.abs(angle * 180.0 / Math.PI);\n\n            // Curl counter logic\n            if (angleDegrees > 160) {\n              setStage(\"DOWN\");\n            }\n            if (angleDegrees < 30 && stage === \"DOWN\") {\n              setStage(\"UP\");\n              setCounter(prev => prev + 1);\n            }\n\n            // Calculate form correctness\n            const isFormCorrect = angleDegrees <= 30 || angleDegrees >= 160;\n\n            // Draw landmarks with color based on form\n            const lineColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\n            const dotColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\n              color: lineColor,\n              lineWidth: 2,\n              radius: 2\n            });\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\n              color: dotColor,\n              lineWidth: 2,\n              radius: 2\n            });\n\n            // Restore the context state\n            ctx.restore();\n\n            // Draw angle (outside inverted context)\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(`${Math.round(angleDegrees)}Â°`, (1 - elbow[0]) * canvas.width, elbow[1] * canvas.height);\n\n            // Draw counter and stage (normal orientation)\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            ctx.fillRect(0, 0, 200, 70);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"REPS\", 20, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(counter.toString(), 25, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(stage || \"\", 100, 60);\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: \"bold\",\n              color: \"primary\",\n              children: \"Bicep Curls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), exercises.bicepCurls.instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [index + 1, \". \", instruction]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: \"The tracker will count your reps when you:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: \"\\u2022 Lower past 160\\xB0 (down position)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"\\u2022 Move up past 30\\xB0 (up position)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              maxWidth: \"800px\",\n              margin: \"0 auto\",\n              backgroundColor: \"#f9fafb\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              border: \"1px solid rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                opacity: 0,\n                zIndex: 1\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: \"100%\",\n                height: \"500px\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\",\n                position: \"relative\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                align: \"center\",\n                children: \"Loading camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                variant: \"contained\",\n                color: \"info\",\n                onClick: () => {\n                  setIsCameraActive(true);\n                  startCamera();\n                },\n                sx: {\n                  mt: 2\n                },\n                children: \"Start Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"7y3aYIR6yvIyUByyMznATSdmRw8=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","Select","MenuItem","FormControl","InputLabel","MDBox","MDButton","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","exercises","bicepCurls","name","instructions","landmarks","left","shoulder","elbow","wrist","right","downAngle","upAngle","PostureSense","_s","videoRef","canvasRef","stage","setStage","counter","setCounter","isCameraActive","setIsCameraActive","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","current","srcObject","Promise","resolve","onloadedmetadata","play","mp","mp_drawing","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","canvas","ctx","getContext","width","videoWidth","height","videoHeight","clearRect","save","scale","translate","drawImage","x","y","angle","Math","atan2","angleDegrees","abs","PI","prev","isFormCorrect","lineColor","dotColor","drawConnectors","POSE_CONNECTIONS","color","lineWidth","radius","drawLandmarks","restore","fillStyle","font","fillText","round","fillRect","toString","processFrame","readyState","HAVE_ENOUGH_DATA","send","image","requestAnimationFrame","error","console","cancelAnimationFrame","getTracks","forEach","track","stop","close","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","sx","mt","map","instruction","index","position","maxWidth","margin","backgroundColor","borderRadius","padding","border","ref","style","objectFit","opacity","zIndex","autoPlay","playsInline","display","flexDirection","alignItems","justifyContent","align","onClick","_c","$RefreshReg$"],"sources":["D:/FitVice/FitVice/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\n// Exercise configurations\r\nconst exercises = {\r\n  bicepCurls: {\r\n    name: \"Bicep Curls\",\r\n    instructions: [\r\n      \"Stand with your back straight and arms at your sides\",\r\n      \"Keep your elbows close to your body\",\r\n      \"Curl both arms up until your biceps are fully contracted\",\r\n      \"Lower your arms back down with controlled movement\"\r\n    ],\r\n    landmarks: {\r\n      left: { shoulder: 11, elbow: 13, wrist: 15 },\r\n      right: { shoulder: 12, elbow: 14, wrist: 16 }\r\n    },\r\n    downAngle: 160,\r\n    upAngle: 30\r\n  }\r\n};\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [stage, setStage] = useState(null);\r\n  const [counter, setCounter] = useState(0);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Wait for video to be ready\r\n        await new Promise((resolve) => {\r\n          video.onloadedmetadata = () => {\r\n            video.play();\r\n            resolve();\r\n          };\r\n        });\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import(\"@mediapipe/pose\");\r\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          },\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5,\r\n        });\r\n\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n\r\n            // Set canvas size to match video\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n\r\n            // Clear the canvas\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Save the current context state\r\n            ctx.save();\r\n            // Scale the context horizontally to flip the image\r\n            ctx.scale(-1, 1);\r\n            ctx.translate(-canvas.width, 0);\r\n            // Draw video frame\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n            // Get coordinates\r\n            const shoulder = [\r\n              landmarks[11].x,\r\n              landmarks[11].y,\r\n            ];\r\n            const elbow = [\r\n              landmarks[13].x,\r\n              landmarks[13].y,\r\n            ];\r\n            const wrist = [\r\n              landmarks[15].x,\r\n              landmarks[15].y,\r\n            ];\r\n\r\n            // Calculate angle\r\n            const angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) -\r\n              Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\r\n            const angleDegrees = Math.abs((angle * 180.0) / Math.PI);\r\n\r\n            // Curl counter logic\r\n            if (angleDegrees > 160) {\r\n              setStage(\"DOWN\");\r\n            }\r\n            if (angleDegrees < 30 && stage === \"DOWN\") {\r\n              setStage(\"UP\");\r\n              setCounter((prev) => prev + 1);\r\n            }\r\n\r\n            // Calculate form correctness\r\n            const isFormCorrect = angleDegrees <= 30 || angleDegrees >= 160;\r\n\r\n            // Draw landmarks with color based on form\r\n            const lineColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\r\n            const dotColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\r\n\r\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\r\n              color: lineColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\r\n              color: dotColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n\r\n            // Restore the context state\r\n            ctx.restore();\r\n\r\n            // Draw angle (outside inverted context)\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              `${Math.round(angleDegrees)}Â°`,\r\n              (1 - elbow[0]) * canvas.width,\r\n              elbow[1] * canvas.height\r\n            );\r\n\r\n            // Draw counter and stage (normal orientation)\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            ctx.fillRect(0, 0, 200, 70);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"REPS\", 20, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(counter.toString(), 25, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(stage || \"\", 100, 60);\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h5\" fontWeight=\"bold\" color=\"primary\">\r\n                Bicep Curls\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                Instructions:\r\n              </Typography>\r\n              {exercises.bicepCurls.instructions.map((instruction, index) => (\r\n                <Typography key={index} variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  {index + 1}. {instruction}\r\n                </Typography>\r\n              ))}\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                The tracker will count your reps when you:\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                â¢ Lower past 160Â° (down position)\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                â¢ Move up past 30Â° (up position)\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                maxWidth: \"800px\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"#f9fafb\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  opacity: 0,\r\n                  zIndex: 1,\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"500px\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n              {!isCameraActive && (\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"500px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                    Loading camera...\r\n                  </Typography>\r\n                  <MDButton\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    onClick={() => {\r\n                      setIsCameraActive(true);\r\n                      startCamera();\r\n                    }}\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    Start Camera\r\n                  </MDButton>\r\n                </MDBox>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}