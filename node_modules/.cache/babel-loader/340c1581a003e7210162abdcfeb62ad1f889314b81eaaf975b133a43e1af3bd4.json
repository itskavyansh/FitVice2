{"ast":null,"code":"var _jsxFileName = \"D:\\\\FitVice\\\\FitVice\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostureSense() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const stageRef = useRef(null);\n  const counterRef = useRef(0);\n  const [stage, setStage] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\n  const [exerciseStats, setExerciseStats] = useState({\n    bicepCurls: {\n      total: 0,\n      today: 0,\n      targetReps: 10,\n      currentWeight: 0,\n      extraReps: 0\n    },\n    pushups: {\n      total: 0,\n      today: 0,\n      targetReps: 10,\n      currentWeight: 0,\n      extraReps: 0\n    },\n    squats: {\n      total: 0,\n      today: 0,\n      targetReps: 10,\n      currentWeight: 0,\n      extraReps: 0\n    },\n    shoulderPress: {\n      total: 0,\n      today: 0,\n      targetReps: 10,\n      currentWeight: 0,\n      extraReps: 0\n    }\n  });\n  const [showCelebration, setShowCelebration] = useState(false);\n  const [showStats, setShowStats] = useState(false);\n  const exercises = {\n    bicepCurls: {\n      name: \"Bicep Curls\",\n      downAngle: 160,\n      upAngle: 30,\n      invertStages: false,\n      isVertical: false,\n      joints: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      instructions: \"Stand with arms at sides, curl weights up to shoulders, then lower back down.\"\n    },\n    pushups: {\n      name: \"Push-ups\",\n      downAngle: 90,\n      upAngle: 30,\n      invertStages: true,\n      isVertical: true,\n      joints: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      instructions: \"Keep body straight, lower chest to ground, then push back up.\"\n    },\n    squats: {\n      name: \"Squats\",\n      downAngle: 90,\n      upAngle: 30,\n      invertStages: true,\n      isVertical: true,\n      joints: {\n        hip: 23,\n        knee: 25,\n        ankle: 27\n      },\n      instructions: \"Stand with feet shoulder-width apart, lower body until thighs are parallel to ground.\"\n    },\n    shoulderPress: {\n      name: \"Shoulder Press\",\n      downAngle: 160,\n      upAngle: 50,\n      invertStages: false,\n      isVertical: true,\n      joints: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      instructions: \"Start with weights at shoulder level, press overhead until arms are fully extended.\"\n    }\n  };\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          video.onloadedmetadata = () => {\n            video.play();\n            resolve();\n          };\n        });\n\n        // Initialize MediaPipe Pose\n        const mp = await import(\"@mediapipe/pose\");\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            const exercise = exercises[selectedExercise];\n\n            // Set canvas size to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Clear the canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Save the current context state\n            ctx.save();\n            // Scale the context horizontally to flip the image\n            ctx.scale(-1, 1);\n            ctx.translate(-canvas.width, 0);\n            // Draw video frame\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get coordinates based on selected exercise\n            const joint1 = [landmarks[exercise.joints.shoulder || exercise.joints.hip].x, landmarks[exercise.joints.shoulder || exercise.joints.hip].y];\n            const joint2 = [landmarks[exercise.joints.elbow || exercise.joints.knee].x, landmarks[exercise.joints.elbow || exercise.joints.knee].y];\n            const joint3 = [landmarks[exercise.joints.wrist || exercise.joints.ankle].x, landmarks[exercise.joints.wrist || exercise.joints.ankle].y];\n\n            // Calculate angle\n            const angle = Math.atan2(joint3[1] - joint2[1], joint3[0] - joint2[0]) - Math.atan2(joint1[1] - joint2[1], joint1[0] - joint2[0]);\n            let angleDegrees = Math.abs(angle * 180.0 / Math.PI);\n            if (angleDegrees > 180.0) {\n              angleDegrees = 360 - angleDegrees;\n            }\n\n            // Exercise counter logic with refs\n            if (exercise.invertStages) {\n              if (angleDegrees > exercise.downAngle) {\n                stageRef.current = \"DOWN\";\n                setStage(\"DOWN\");\n              }\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\n                stageRef.current = \"UP\";\n                setStage(\"UP\");\n                counterRef.current += 1;\n                setCounter(counterRef.current);\n              }\n            } else {\n              if (angleDegrees > exercise.downAngle) {\n                stageRef.current = \"DOWN\";\n                setStage(\"DOWN\");\n              }\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\n                stageRef.current = \"UP\";\n                setStage(\"UP\");\n                counterRef.current += 1;\n                setCounter(counterRef.current);\n              }\n            }\n\n            // Draw landmarks with color-coded tracking\n            const isCorrectForm = angleDegrees >= exercise.upAngle && angleDegrees <= exercise.downAngle;\n            const trackingColor = isCorrectForm ? \"#4CAF50\" : \"#F44336\"; // Green for correct, Red for incorrect\n            const formMessage = stageRef.current ? `GO ${selectedExercise === \"shoulderPress\" ? stageRef.current === \"DOWN\" ? \"DOWN\" : \"UP\" : stageRef.current === \"UP\" ? \"DOWN\" : \"UP\"}` : \"GO DOWN\";\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\n              color: trackingColor,\n              lineWidth: 2,\n              radius: 2\n            });\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\n              color: trackingColor,\n              lineWidth: 2,\n              radius: 2\n            });\n\n            // Restore the context state\n            ctx.restore();\n\n            // Draw angle with color-coded text\n            ctx.fillStyle = trackingColor;\n            ctx.font = \"20px Arial\";\n            ctx.fillText(`${Math.round(angleDegrees)}Â°`, (1 - joint2[0]) * canvas.width, joint2[1] * canvas.height);\n\n            // Draw counter and stage with form indicator\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            ctx.fillRect(0, 0, 200, 90);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"REPS\", 20, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(counterRef.current.toString(), 25, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(selectedExercise === \"shoulderPress\" && stageRef.current ? stageRef.current === \"DOWN\" ? \"UP\" : \"DOWN\" : stageRef.current || \"\", 100, 60);\n\n            // Add form indicator with extra reps highlight\n            const currentStats = exerciseStats[selectedExercise];\n            if (currentStats.extraReps > 0) {\n              ctx.fillStyle = \"#4CAF50\";\n              ctx.font = \"bold 20px Arial\";\n              ctx.fillText(`+${currentStats.extraReps}`, 180, 60);\n            }\n            ctx.fillStyle = trackingColor;\n            ctx.font = \"16px Arial\";\n            ctx.fillText(formMessage, 20, 85);\n\n            // Update exercise stats when rep is completed\n            if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\n              setExerciseStats(prev => {\n                const currentStats = prev[selectedExercise];\n                const newTotal = currentStats.total + 1;\n                const newToday = currentStats.today + 1;\n                const extraReps = newToday > currentStats.targetReps ? newToday - currentStats.targetReps : 0;\n\n                // Show celebration when exceeding target\n                if (newToday > currentStats.targetReps) {\n                  setShowCelebration(true);\n                  // Play celebration sound\n                  const audio = new Audio(\"https://assets.mixkit.co/active_storage/sfx/2013/2013-preview.mp3\");\n                  audio.play().catch(console.error);\n                  setTimeout(() => setShowCelebration(false), 3000);\n                }\n                return {\n                  ...prev,\n                  [selectedExercise]: {\n                    ...currentStats,\n                    total: newTotal,\n                    today: newToday,\n                    extraReps\n                  }\n                };\n              });\n            }\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, [selectedExercise]);\n  const handleExerciseChange = exercise => {\n    setSelectedExercise(exercise);\n    setCounter(0);\n    setStage(null);\n    stageRef.current = null;\n    counterRef.current = 0;\n  };\n  const handleTargetRepsChange = (exercise, value) => {\n    setExerciseStats(prev => ({\n      ...prev,\n      [exercise]: {\n        ...prev[exercise],\n        targetReps: parseInt(value) || 0\n      }\n    }));\n  };\n  const handleWeightChange = (exercise, value) => {\n    setExerciseStats(prev => ({\n      ...prev,\n      [exercise]: {\n        ...prev[exercise],\n        currentWeight: parseInt(value) || 0\n      }\n    }));\n  };\n  const progress = counter / exerciseStats[selectedExercise].targetReps * 100;\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              color: \"info\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              backgroundColor: \"white\",\n              borderRadius: \"12px\",\n              padding: \"20px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n              height: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: \"info\",\n              fontWeight: \"bold\",\n              mb: 2,\n              children: \"Exercise Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), Object.entries(exerciseStats).map(([exercise, stats]) => /*#__PURE__*/_jsxDEV(MDBox, {\n              mb: 3,\n              sx: {\n                p: 2,\n                borderRadius: \"8px\",\n                backgroundColor: selectedExercise === exercise ? \"rgba(0, 0, 0, 0.05)\" : \"transparent\",\n                transition: \"all 0.3s ease\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"info\",\n                fontWeight: \"bold\",\n                children: exercises[exercise].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Today: \", stats.today, \" | Total: \", stats.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                sx: {\n                  display: \"flex\",\n                  gap: 2,\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(MDBox, {\n                  sx: {\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: \"Target Reps\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                    component: \"input\",\n                    type: \"number\",\n                    value: stats.targetReps,\n                    onChange: e => handleTargetRepsChange(exercise, e.target.value),\n                    sx: {\n                      width: \"100%\",\n                      p: 0.5,\n                      borderRadius: \"4px\",\n                      border: \"1px solid rgba(0,0,0,0.1)\",\n                      fontSize: \"0.875rem\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                  sx: {\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: \"Weight (kg)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                    component: \"input\",\n                    type: \"number\",\n                    value: stats.currentWeight,\n                    onChange: e => handleWeightChange(exercise, e.target.value),\n                    sx: {\n                      width: \"100%\",\n                      p: 0.5,\n                      borderRadius: \"4px\",\n                      border: \"1px solid rgba(0,0,0,0.1)\",\n                      fontSize: \"0.875rem\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this)]\n            }, exercise, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              margin: \"0 auto\",\n              backgroundColor: \"white\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"15px\",\n                backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n                padding: \"15px\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\n                marginBottom: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MDBox, {\n                sx: {\n                  display: \"flex\",\n                  gap: \"10px\",\n                  justifyContent: \"center\",\n                  flexWrap: \"wrap\"\n                },\n                children: Object.keys(exercises).map(exercise => /*#__PURE__*/_jsxDEV(MDButton, {\n                  variant: selectedExercise === exercise ? \"contained\" : \"outlined\",\n                  color: selectedExercise === exercise ? \"info\" : \"dark\",\n                  onClick: () => handleExerciseChange(exercise),\n                  size: \"small\",\n                  sx: {\n                    minWidth: \"120px\",\n                    transition: \"all 0.3s ease\",\n                    \"&:hover\": {\n                      transform: \"translateY(-2px)\",\n                      boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\"\n                    }\n                  },\n                  children: exercises[exercise].name\n                }, exercise, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                sx: {\n                  textAlign: \"center\",\n                  padding: \"15px\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                  borderRadius: \"8px\",\n                  transition: \"all 0.3s ease\",\n                  \"&:hover\": {\n                    backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  color: \"info\",\n                  fontWeight: \"bold\",\n                  mb: 1,\n                  children: exercises[selectedExercise].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  mb: 2,\n                  children: exercises[selectedExercise].instructions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                  sx: {\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    gap: \"20px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"Target: \", exerciseStats[selectedExercise].targetReps, \" reps\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"Weight: \", exerciseStats[selectedExercise].currentWeight, \" kg\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 19\n                }, this), exerciseStats[selectedExercise].extraReps > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"success.main\",\n                  fontWeight: \"bold\",\n                  mt: 1,\n                  children: [\"Extra Reps: +\", exerciseStats[selectedExercise].extraReps, \" \\uD83D\\uDCAA\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n                sx: {\n                  width: \"100%\",\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(MDBox, {\n                  sx: {\n                    width: \"100%\",\n                    height: \"8px\",\n                    backgroundColor: \"rgba(0, 0, 0, 0.1)\",\n                    borderRadius: \"4px\",\n                    overflow: \"hidden\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(MDBox, {\n                    sx: {\n                      width: `${progress}%`,\n                      height: \"100%\",\n                      backgroundColor: \"info.main\",\n                      transition: \"width 0.3s ease\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 558,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                opacity: 0,\n                zIndex: 1\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: \"100%\",\n                height: \"500px\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\",\n                position: \"relative\",\n                zIndex: 2,\n                boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\n                transition: \"all 0.3s ease\",\n                \"&:hover\": {\n                  boxShadow: \"0 6px 12px rgba(0,0,0,0.15)\"\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"500px\",\n                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                borderRadius: \"12px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                align: \"center\",\n                mb: 2,\n                children: \"Loading camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                variant: \"contained\",\n                color: \"info\",\n                onClick: () => {\n                  setIsCameraActive(true);\n                  startCamera();\n                },\n                sx: {\n                  mt: 2,\n                  transition: \"all 0.3s ease\",\n                  \"&:hover\": {\n                    transform: \"translateY(-2px)\",\n                    boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\"\n                  }\n                },\n                children: \"Start Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 17\n            }, this), showCelebration && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                position: \"fixed\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                backgroundColor: \"success.main\",\n                color: \"white\",\n                padding: \"30px\",\n                borderRadius: \"16px\",\n                textAlign: \"center\",\n                animation: \"fadeInOut 3s ease-in-out\",\n                zIndex: 1000,\n                boxShadow: \"0 8px 32px rgba(0,0,0,0.2)\",\n                \"@keyframes fadeInOut\": {\n                  \"0%\": {\n                    opacity: 0,\n                    transform: \"translate(-50%, -50%) scale(0.8)\"\n                  },\n                  \"20%\": {\n                    opacity: 1,\n                    transform: \"translate(-50%, -50%) scale(1.1)\"\n                  },\n                  \"40%\": {\n                    transform: \"translate(-50%, -50%) scale(1)\"\n                  },\n                  \"80%\": {\n                    opacity: 1,\n                    transform: \"translate(-50%, -50%) scale(1)\"\n                  },\n                  \"100%\": {\n                    opacity: 0,\n                    transform: \"translate(-50%, -50%) scale(0.8)\"\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                fontWeight: \"bold\",\n                mb: 2,\n                children: \"\\uD83C\\uDF89 AMAZING! \\uD83C\\uDF89\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                mb: 2,\n                children: \"You're crushing it! \\uD83D\\uDCAA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [exerciseStats[selectedExercise].extraReps, \" extra reps beyond your target!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"kHQyBNbWRM0hZgwN5USZrM46PFg=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","MDBox","MDButton","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","PostureSense","_s","videoRef","canvasRef","stageRef","counterRef","stage","setStage","counter","setCounter","isCameraActive","setIsCameraActive","selectedExercise","setSelectedExercise","exerciseStats","setExerciseStats","bicepCurls","total","today","targetReps","currentWeight","extraReps","pushups","squats","shoulderPress","showCelebration","setShowCelebration","showStats","setShowStats","exercises","name","downAngle","upAngle","invertStages","isVertical","joints","shoulder","elbow","wrist","instructions","hip","knee","ankle","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","current","srcObject","Promise","resolve","onloadedmetadata","play","mp","mp_drawing","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","landmarks","canvas","ctx","getContext","exercise","width","videoWidth","height","videoHeight","clearRect","save","scale","translate","drawImage","joint1","x","y","joint2","joint3","angle","Math","atan2","angleDegrees","abs","PI","isCorrectForm","trackingColor","formMessage","drawConnectors","POSE_CONNECTIONS","color","lineWidth","radius","drawLandmarks","restore","fillStyle","font","fillText","round","fillRect","toString","currentStats","prev","newTotal","newToday","audio","Audio","catch","console","error","setTimeout","processFrame","readyState","HAVE_ENOUGH_DATA","send","image","requestAnimationFrame","cancelAnimationFrame","getTracks","forEach","track","stop","close","handleExerciseChange","handleTargetRepsChange","value","parseInt","handleWeightChange","progress","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","md","sx","backgroundColor","borderRadius","padding","boxShadow","Object","entries","map","stats","p","transition","display","gap","mt","flex","component","type","onChange","e","target","border","fontSize","position","margin","flexDirection","marginBottom","justifyContent","flexWrap","keys","onClick","size","minWidth","transform","textAlign","overflow","ref","style","objectFit","opacity","zIndex","autoPlay","playsInline","alignItems","align","top","left","animation","_c","$RefreshReg$"],"sources":["D:/FitVice/FitVice/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const stageRef = useRef(null);\r\n  const counterRef = useRef(0);\r\n  const [stage, setStage] = useState(null);\r\n  const [counter, setCounter] = useState(0);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\r\n  const [exerciseStats, setExerciseStats] = useState({\r\n    bicepCurls: { total: 0, today: 0, targetReps: 10, currentWeight: 0, extraReps: 0 },\r\n    pushups: { total: 0, today: 0, targetReps: 10, currentWeight: 0, extraReps: 0 },\r\n    squats: { total: 0, today: 0, targetReps: 10, currentWeight: 0, extraReps: 0 },\r\n    shoulderPress: { total: 0, today: 0, targetReps: 10, currentWeight: 0, extraReps: 0 },\r\n  });\r\n  const [showCelebration, setShowCelebration] = useState(false);\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  const exercises = {\r\n    bicepCurls: {\r\n      name: \"Bicep Curls\",\r\n      downAngle: 160,\r\n      upAngle: 30,\r\n      invertStages: false,\r\n      isVertical: false,\r\n      joints: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15,\r\n      },\r\n      instructions: \"Stand with arms at sides, curl weights up to shoulders, then lower back down.\",\r\n    },\r\n    pushups: {\r\n      name: \"Push-ups\",\r\n      downAngle: 90,\r\n      upAngle: 30,\r\n      invertStages: true,\r\n      isVertical: true,\r\n      joints: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15,\r\n      },\r\n      instructions: \"Keep body straight, lower chest to ground, then push back up.\",\r\n    },\r\n    squats: {\r\n      name: \"Squats\",\r\n      downAngle: 90,\r\n      upAngle: 30,\r\n      invertStages: true,\r\n      isVertical: true,\r\n      joints: {\r\n        hip: 23,\r\n        knee: 25,\r\n        ankle: 27,\r\n      },\r\n      instructions:\r\n        \"Stand with feet shoulder-width apart, lower body until thighs are parallel to ground.\",\r\n    },\r\n    shoulderPress: {\r\n      name: \"Shoulder Press\",\r\n      downAngle: 160,\r\n      upAngle: 50,\r\n      invertStages: false,\r\n      isVertical: true,\r\n      joints: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15,\r\n      },\r\n      instructions:\r\n        \"Start with weights at shoulder level, press overhead until arms are fully extended.\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Wait for video to be ready\r\n        await new Promise((resolve) => {\r\n          video.onloadedmetadata = () => {\r\n            video.play();\r\n            resolve();\r\n          };\r\n        });\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import(\"@mediapipe/pose\");\r\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          },\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5,\r\n        });\r\n\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const exercise = exercises[selectedExercise];\r\n\r\n            // Set canvas size to match video\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n\r\n            // Clear the canvas\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Save the current context state\r\n            ctx.save();\r\n            // Scale the context horizontally to flip the image\r\n            ctx.scale(-1, 1);\r\n            ctx.translate(-canvas.width, 0);\r\n            // Draw video frame\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n            // Get coordinates based on selected exercise\r\n            const joint1 = [\r\n              landmarks[exercise.joints.shoulder || exercise.joints.hip].x,\r\n              landmarks[exercise.joints.shoulder || exercise.joints.hip].y,\r\n            ];\r\n            const joint2 = [\r\n              landmarks[exercise.joints.elbow || exercise.joints.knee].x,\r\n              landmarks[exercise.joints.elbow || exercise.joints.knee].y,\r\n            ];\r\n            const joint3 = [\r\n              landmarks[exercise.joints.wrist || exercise.joints.ankle].x,\r\n              landmarks[exercise.joints.wrist || exercise.joints.ankle].y,\r\n            ];\r\n\r\n            // Calculate angle\r\n            const angle = Math.atan2(joint3[1] - joint2[1], joint3[0] - joint2[0]) -\r\n              Math.atan2(joint1[1] - joint2[1], joint1[0] - joint2[0]);\r\n\r\n            let angleDegrees = Math.abs((angle * 180.0) / Math.PI);\r\n\r\n            if (angleDegrees > 180.0) {\r\n              angleDegrees = 360 - angleDegrees;\r\n            }\r\n\r\n            // Exercise counter logic with refs\r\n            if (exercise.invertStages) {\r\n              if (angleDegrees > exercise.downAngle) {\r\n                stageRef.current = \"DOWN\";\r\n                setStage(\"DOWN\");\r\n              }\r\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\r\n                stageRef.current = \"UP\";\r\n                setStage(\"UP\");\r\n                counterRef.current += 1;\r\n                setCounter(counterRef.current);\r\n              }\r\n            } else {\r\n              if (angleDegrees > exercise.downAngle) {\r\n                stageRef.current = \"DOWN\";\r\n                setStage(\"DOWN\");\r\n              }\r\n              if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\r\n                stageRef.current = \"UP\";\r\n                setStage(\"UP\");\r\n                counterRef.current += 1;\r\n                setCounter(counterRef.current);\r\n              }\r\n            }\r\n\r\n            // Draw landmarks with color-coded tracking\r\n            const isCorrectForm = angleDegrees >= exercise.upAngle && angleDegrees <= exercise.downAngle;\r\n            const trackingColor = isCorrectForm ? \"#4CAF50\" : \"#F44336\"; // Green for correct, Red for incorrect\r\n            const formMessage = stageRef.current\r\n              ? `GO ${\r\n                  selectedExercise === \"shoulderPress\"\r\n                    ? stageRef.current === \"DOWN\"\r\n                      ? \"DOWN\"\r\n                      : \"UP\"\r\n                    : stageRef.current === \"UP\"\r\n                      ? \"DOWN\"\r\n                      : \"UP\"\r\n                }`\r\n              : \"GO DOWN\";\r\n\r\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\r\n              color: trackingColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\r\n              color: trackingColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n\r\n            // Restore the context state\r\n            ctx.restore();\r\n\r\n            // Draw angle with color-coded text\r\n            ctx.fillStyle = trackingColor;\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              `${Math.round(angleDegrees)}Â°`,\r\n              (1 - joint2[0]) * canvas.width,\r\n              joint2[1] * canvas.height\r\n            );\r\n\r\n            // Draw counter and stage with form indicator\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            ctx.fillRect(0, 0, 200, 90);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"REPS\", 20, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(counterRef.current.toString(), 25, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              selectedExercise === \"shoulderPress\" && stageRef.current\r\n                ? stageRef.current === \"DOWN\"\r\n                  ? \"UP\"\r\n                  : \"DOWN\"\r\n                : stageRef.current || \"\",\r\n              100,\r\n              60\r\n            );\r\n\r\n            // Add form indicator with extra reps highlight\r\n            const currentStats = exerciseStats[selectedExercise];\r\n            if (currentStats.extraReps > 0) {\r\n              ctx.fillStyle = \"#4CAF50\";\r\n              ctx.font = \"bold 20px Arial\";\r\n              ctx.fillText(`+${currentStats.extraReps}`, 180, 60);\r\n            }\r\n\r\n            ctx.fillStyle = trackingColor;\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(formMessage, 20, 85);\r\n\r\n            // Update exercise stats when rep is completed\r\n            if (angleDegrees < exercise.upAngle && stageRef.current === \"DOWN\") {\r\n              setExerciseStats((prev) => {\r\n                const currentStats = prev[selectedExercise];\r\n                const newTotal = currentStats.total + 1;\r\n                const newToday = currentStats.today + 1;\r\n                const extraReps = newToday > currentStats.targetReps ? newToday - currentStats.targetReps : 0;\r\n                \r\n                // Show celebration when exceeding target\r\n                if (newToday > currentStats.targetReps) {\r\n                  setShowCelebration(true);\r\n                  // Play celebration sound\r\n                  const audio = new Audio(\"https://assets.mixkit.co/active_storage/sfx/2013/2013-preview.mp3\");\r\n                  audio.play().catch(console.error);\r\n                  setTimeout(() => setShowCelebration(false), 3000);\r\n                }\r\n\r\n                return {\r\n                  ...prev,\r\n                  [selectedExercise]: {\r\n                    ...currentStats,\r\n                    total: newTotal,\r\n                    today: newToday,\r\n                    extraReps,\r\n                  }\r\n                };\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, [selectedExercise]);\r\n\r\n  const handleExerciseChange = (exercise) => {\r\n    setSelectedExercise(exercise);\r\n    setCounter(0);\r\n    setStage(null);\r\n    stageRef.current = null;\r\n    counterRef.current = 0;\r\n  };\r\n\r\n  const handleTargetRepsChange = (exercise, value) => {\r\n    setExerciseStats((prev) => ({\r\n      ...prev,\r\n      [exercise]: {\r\n        ...prev[exercise],\r\n        targetReps: parseInt(value) || 0,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleWeightChange = (exercise, value) => {\r\n    setExerciseStats((prev) => ({\r\n      ...prev,\r\n      [exercise]: {\r\n        ...prev[exercise],\r\n        currentWeight: parseInt(value) || 0,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const progress = (counter / exerciseStats[selectedExercise].targetReps) * 100;\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\" color=\"info\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n\r\n          {/* Stats Overview */}\r\n          <Grid item xs={12} md={4}>\r\n            <MDBox\r\n              sx={{\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"12px\",\r\n                padding: \"20px\",\r\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                height: \"100%\"\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"info\" fontWeight=\"bold\" mb={2}>\r\n                Exercise Statistics\r\n              </Typography>\r\n              {Object.entries(exerciseStats).map(([exercise, stats]) => (\r\n                <MDBox \r\n                  key={exercise} \r\n                  mb={3}\r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: \"8px\",\r\n                    backgroundColor: selectedExercise === exercise ? \"rgba(0, 0, 0, 0.05)\" : \"transparent\",\r\n                    transition: \"all 0.3s ease\"\r\n                  }}\r\n                >\r\n                  <Typography variant=\"subtitle2\" color=\"info\" fontWeight=\"bold\">\r\n                    {exercises[exercise].name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Today: {stats.today} | Total: {stats.total}\r\n                  </Typography>\r\n                  <MDBox sx={{ display: \"flex\", gap: 2, mt: 1 }}>\r\n                    <MDBox sx={{ flex: 1 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        Target Reps\r\n                      </Typography>\r\n                      <MDBox\r\n                        component=\"input\"\r\n                        type=\"number\"\r\n                        value={stats.targetReps}\r\n                        onChange={(e) => handleTargetRepsChange(exercise, e.target.value)}\r\n                        sx={{\r\n                          width: \"100%\",\r\n                          p: 0.5,\r\n                          borderRadius: \"4px\",\r\n                          border: \"1px solid rgba(0,0,0,0.1)\",\r\n                          fontSize: \"0.875rem\"\r\n                        }}\r\n                      />\r\n                    </MDBox>\r\n                    <MDBox sx={{ flex: 1 }}>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        Weight (kg)\r\n                      </Typography>\r\n                      <MDBox\r\n                        component=\"input\"\r\n                        type=\"number\"\r\n                        value={stats.currentWeight}\r\n                        onChange={(e) => handleWeightChange(exercise, e.target.value)}\r\n                        sx={{\r\n                          width: \"100%\",\r\n                          p: 0.5,\r\n                          borderRadius: \"4px\",\r\n                          border: \"1px solid rgba(0,0,0,0.1)\",\r\n                          fontSize: \"0.875rem\"\r\n                        }}\r\n                      />\r\n                    </MDBox>\r\n                  </MDBox>\r\n                </MDBox>\r\n              ))}\r\n            </MDBox>\r\n          </Grid>\r\n\r\n          {/* Main Exercise Area */}\r\n          <Grid item xs={12} md={8}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              {/* Exercise Selection */}\r\n              <MDBox\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"15px\",\r\n                  backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n                  padding: \"15px\",\r\n                  borderRadius: \"8px\",\r\n                  boxShadow: \"0 2px 4px rgba(0,0,0,0.1)\",\r\n                  marginBottom: \"20px\",\r\n                }}\r\n              >\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    gap: \"10px\",\r\n                    justifyContent: \"center\",\r\n                    flexWrap: \"wrap\"\r\n                  }}\r\n                >\r\n                  {Object.keys(exercises).map((exercise) => (\r\n                    <MDButton\r\n                      key={exercise}\r\n                      variant={selectedExercise === exercise ? \"contained\" : \"outlined\"}\r\n                      color={selectedExercise === exercise ? \"info\" : \"dark\"}\r\n                      onClick={() => handleExerciseChange(exercise)}\r\n                      size=\"small\"\r\n                      sx={{\r\n                        minWidth: \"120px\",\r\n                        transition: \"all 0.3s ease\",\r\n                        \"&:hover\": {\r\n                          transform: \"translateY(-2px)\",\r\n                          boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\"\r\n                        }\r\n                      }}\r\n                    >\r\n                      {exercises[exercise].name}\r\n                    </MDButton>\r\n                  ))}\r\n                </MDBox>\r\n\r\n                {/* Exercise Info */}\r\n                <MDBox\r\n                  sx={{\r\n                    textAlign: \"center\",\r\n                    padding: \"15px\",\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                    borderRadius: \"8px\",\r\n                    transition: \"all 0.3s ease\",\r\n                    \"&:hover\": {\r\n                      backgroundColor: \"rgba(0, 0, 0, 0.08)\"\r\n                    }\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h6\" color=\"info\" fontWeight=\"bold\" mb={1}>\r\n                    {exercises[selectedExercise].name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" mb={2}>\r\n                    {exercises[selectedExercise].instructions}\r\n                  </Typography>\r\n                  <MDBox sx={{ display: \"flex\", justifyContent: \"center\", gap: \"20px\" }}>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Target: {exerciseStats[selectedExercise].targetReps} reps\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Weight: {exerciseStats[selectedExercise].currentWeight} kg\r\n                    </Typography>\r\n                  </MDBox>\r\n                  {exerciseStats[selectedExercise].extraReps > 0 && (\r\n                    <Typography variant=\"body2\" color=\"success.main\" fontWeight=\"bold\" mt={1}>\r\n                      Extra Reps: +{exerciseStats[selectedExercise].extraReps} ðª\r\n                    </Typography>\r\n                  )}\r\n                </MDBox>\r\n\r\n                {/* Progress Bar */}\r\n                <MDBox sx={{ width: \"100%\", mt: 2 }}>\r\n                  <MDBox\r\n                    sx={{\r\n                      width: \"100%\",\r\n                      height: \"8px\",\r\n                      backgroundColor: \"rgba(0, 0, 0, 0.1)\",\r\n                      borderRadius: \"4px\",\r\n                      overflow: \"hidden\"\r\n                    }}\r\n                  >\r\n                    <MDBox\r\n                      sx={{\r\n                        width: `${progress}%`,\r\n                        height: \"100%\",\r\n                        backgroundColor: \"info.main\",\r\n                        transition: \"width 0.3s ease\"\r\n                      }}\r\n                    />\r\n                  </MDBox>\r\n                </MDBox>\r\n              </MDBox>\r\n\r\n              {/* Camera Display */}\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  opacity: 0,\r\n                  zIndex: 1,\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"500px\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                  zIndex: 2,\r\n                  boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\",\r\n                  transition: \"all 0.3s ease\",\r\n                  \"&:hover\": {\r\n                    boxShadow: \"0 6px 12px rgba(0,0,0,0.15)\"\r\n                  }\r\n                }}\r\n              />\r\n              {!isCameraActive && (\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"500px\",\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\r\n                    borderRadius: \"12px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\" mb={2}>\r\n                    Loading camera...\r\n                  </Typography>\r\n                  <MDButton\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    onClick={() => {\r\n                      setIsCameraActive(true);\r\n                      startCamera();\r\n                    }}\r\n                    sx={{\r\n                      mt: 2,\r\n                      transition: \"all 0.3s ease\",\r\n                      \"&:hover\": {\r\n                        transform: \"translateY(-2px)\",\r\n                        boxShadow: \"0 4px 8px rgba(0,0,0,0.1)\"\r\n                      }\r\n                    }}\r\n                  >\r\n                    Start Camera\r\n                  </MDButton>\r\n                </MDBox>\r\n              )}\r\n\r\n              {/* Celebration Popup */}\r\n              {showCelebration && (\r\n                <MDBox\r\n                  sx={{\r\n                    position: \"fixed\",\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                    backgroundColor: \"success.main\",\r\n                    color: \"white\",\r\n                    padding: \"30px\",\r\n                    borderRadius: \"16px\",\r\n                    textAlign: \"center\",\r\n                    animation: \"fadeInOut 3s ease-in-out\",\r\n                    zIndex: 1000,\r\n                    boxShadow: \"0 8px 32px rgba(0,0,0,0.2)\",\r\n                    \"@keyframes fadeInOut\": {\r\n                      \"0%\": { opacity: 0, transform: \"translate(-50%, -50%) scale(0.8)\" },\r\n                      \"20%\": { opacity: 1, transform: \"translate(-50%, -50%) scale(1.1)\" },\r\n                      \"40%\": { transform: \"translate(-50%, -50%) scale(1)\" },\r\n                      \"80%\": { opacity: 1, transform: \"translate(-50%, -50%) scale(1)\" },\r\n                      \"100%\": { opacity: 0, transform: \"translate(-50%, -50%) scale(0.8)\" }\r\n                    }\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h3\" fontWeight=\"bold\" mb={2}>\r\n                    ð AMAZING! ð\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" mb={2}>\r\n                    You&apos;re crushing it! ðª\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {exerciseStats[selectedExercise].extraReps} extra reps beyond your target!\r\n                  </Typography>\r\n                </MDBox>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}