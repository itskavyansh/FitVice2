{"ast":null,"code":"var _jsxFileName = \"D:\\\\FitVice\\\\FitVice\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\n// Exercise configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercises = {\n  bicepCurls: {\n    name: \"Bicep Curls\",\n    instructions: [\"Stand with your back straight and arms at your sides\", \"Keep your elbows close to your body\", \"Curl both arms up until your biceps are fully contracted\", \"Lower your arms back down with controlled movement\"],\n    landmarks: {\n      left: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      right: {\n        shoulder: 12,\n        elbow: 14,\n        wrist: 16\n      }\n    },\n    downAngle: 160,\n    upAngle: 30\n  },\n  pushups: {\n    name: \"Push-ups\",\n    instructions: [\"Get into a plank position with hands shoulder-width apart\", \"Keep your body straight from head to heels\", \"Lower your body until your chest nearly touches the ground\", \"Push back up to starting position\"],\n    landmarks: {\n      left: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      right: {\n        shoulder: 12,\n        elbow: 14,\n        wrist: 16\n      }\n    },\n    downAngle: 90,\n    upAngle: 30\n  },\n  squats: {\n    name: \"Squats\",\n    instructions: [\"Stand with feet shoulder-width apart\", \"Keep your back straight\", \"Lower your body until thighs are parallel to ground\", \"Push back up to starting position\"],\n    landmarks: {\n      left: {\n        shoulder: 23,\n        elbow: 25,\n        wrist: 27\n      },\n      right: {\n        shoulder: 24,\n        elbow: 26,\n        wrist: 28\n      }\n    },\n    downAngle: 90,\n    upAngle: 30\n  },\n  shoulderPress: {\n    name: \"Shoulder Press\",\n    instructions: [\"Stand with feet shoulder-width apart\", \"Hold weights at shoulder level\", \"Press weights overhead until arms are fully extended\", \"Lower weights back to shoulder level\"],\n    landmarks: {\n      left: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15\n      },\n      right: {\n        shoulder: 12,\n        elbow: 14,\n        wrist: 16\n      }\n    },\n    downAngle: 90,\n    upAngle: 30\n  }\n};\nfunction PostureSense() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const lastStageRef = useRef(null);\n  const [stage, setStage] = useState(null);\n  const [counter, setCounter] = useState(0);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\n\n  // Reset lastStageRef when changing exercises\n  useEffect(() => {\n    lastStageRef.current = null;\n  }, [selectedExercise]);\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          video.onloadedmetadata = () => {\n            video.play();\n            resolve();\n          };\n        });\n\n        // Initialize MediaPipe Pose\n        const mp = await import(\"@mediapipe/pose\");\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            const exercise = exercises[selectedExercise];\n\n            // Set canvas size to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Clear the canvas\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Save the current context state\n            ctx.save();\n            // Scale the context horizontally to flip the image\n            ctx.scale(-1, 1);\n            ctx.translate(-canvas.width, 0);\n            // Draw video frame\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n            // Get coordinates\n            const shoulder = [landmarks[exercise.landmarks.left.shoulder].x, landmarks[exercise.landmarks.left.shoulder].y];\n            const elbow = [landmarks[exercise.landmarks.left.elbow].x, landmarks[exercise.landmarks.left.elbow].y];\n            const wrist = [landmarks[exercise.landmarks.left.wrist].x, landmarks[exercise.landmarks.left.wrist].y];\n\n            // Calculate angle\n            let angle;\n            if (selectedExercise === \"bicepCurls\") {\n              // For bicep curls, calculate joint angle\n              angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) - Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\n              angle = Math.abs(angle * 180.0 / Math.PI);\n            } else {\n              // For other exercises, calculate vertical angle\n              angle = Math.atan2(wrist[1] - shoulder[1], wrist[0] - shoulder[0]);\n              angle = Math.abs(angle * 180.0 / Math.PI);\n            }\n            if (angle > 180.0) {\n              angle = 360 - angle;\n            }\n\n            // Exercise counter logic\n            if (selectedExercise === \"bicepCurls\") {\n              if (angle > exercise.downAngle) {\n                setStage(\"DOWN\");\n              }\n              if (angle < exercise.upAngle && stage === \"DOWN\") {\n                setStage(\"UP\");\n                setCounter(prev => prev + 1);\n              }\n            } else {\n              if (angle < exercise.upAngle) {\n                setStage(\"DOWN\");\n              }\n              if (angle > exercise.downAngle && stage === \"DOWN\") {\n                setStage(\"UP\");\n                setCounter(prev => prev + 1);\n              }\n            }\n\n            // Calculate form correctness\n            let isFormCorrect = false;\n            if (selectedExercise === \"bicepCurls\") {\n              isFormCorrect = angle <= exercise.upAngle || angle >= exercise.downAngle;\n            } else {\n              isFormCorrect = angle >= exercise.upAngle && angle <= exercise.downAngle;\n            }\n\n            // Draw landmarks with color based on form\n            const lineColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\n            const dotColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\n              color: lineColor,\n              lineWidth: 2,\n              radius: 2\n            });\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\n              color: dotColor,\n              lineWidth: 2,\n              radius: 2\n            });\n\n            // Restore the context state\n            ctx.restore();\n\n            // Draw angle (outside inverted context)\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(`${Math.round(angle)}Â°`, (1 - elbow[0]) * canvas.width, elbow[1] * canvas.height);\n\n            // Draw counter and stage (normal orientation)\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            ctx.fillRect(0, 0, 200, 70);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"REPS\", 20, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(counter.toString(), 25, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(stage || \"\", 100, 60);\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, [selectedExercise]);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedExercise,\n                label: \"Select Exercise\",\n                onChange: e => {\n                  setSelectedExercise(e.target.value);\n                  setCounter(0);\n                  setStage(null);\n                  lastStageRef.current = null;\n                },\n                children: Object.entries(exercises).map(([key, exercise]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: key,\n                  children: exercise.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: \"bold\",\n              color: \"primary\",\n              children: exercises[selectedExercise].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), exercises[selectedExercise].instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [index + 1, \". \", instruction]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: \"The tracker will count your reps when you:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [\"\\u2022 Lower past \", exercises[selectedExercise].downAngle, \"\\xB0 (down position)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"\\u2022 Move up past \", exercises[selectedExercise].upAngle, \"\\xB0 (up position)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              maxWidth: \"800px\",\n              margin: \"0 auto\",\n              backgroundColor: \"#f9fafb\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              border: \"1px solid rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                opacity: 0,\n                zIndex: 1\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: \"100%\",\n                height: \"500px\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\",\n                position: \"relative\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                align: \"center\",\n                children: \"Loading camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                variant: \"contained\",\n                color: \"info\",\n                onClick: () => {\n                  setIsCameraActive(true);\n                  startCamera();\n                },\n                sx: {\n                  mt: 2\n                },\n                children: \"Start Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"Fwxdqo3sAGWpTIEVPjqvUMfPLhA=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","Select","MenuItem","FormControl","InputLabel","MDBox","MDButton","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","exercises","bicepCurls","name","instructions","landmarks","left","shoulder","elbow","wrist","right","downAngle","upAngle","pushups","squats","shoulderPress","PostureSense","_s","videoRef","canvasRef","lastStageRef","stage","setStage","counter","setCounter","isCameraActive","setIsCameraActive","selectedExercise","setSelectedExercise","current","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","srcObject","Promise","resolve","onloadedmetadata","play","mp","mp_drawing","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","canvas","ctx","getContext","exercise","width","videoWidth","height","videoHeight","clearRect","save","scale","translate","drawImage","x","y","angle","Math","atan2","abs","PI","prev","isFormCorrect","lineColor","dotColor","drawConnectors","POSE_CONNECTIONS","color","lineWidth","radius","drawLandmarks","restore","fillStyle","font","fillText","round","fillRect","toString","processFrame","readyState","HAVE_ENOUGH_DATA","send","image","requestAnimationFrame","error","console","cancelAnimationFrame","getTracks","forEach","track","stop","close","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","fullWidth","value","label","onChange","e","target","Object","entries","map","key","sx","mt","instruction","index","position","maxWidth","margin","backgroundColor","borderRadius","padding","border","ref","style","objectFit","opacity","zIndex","autoPlay","playsInline","display","flexDirection","alignItems","justifyContent","align","onClick","_c","$RefreshReg$"],"sources":["D:/FitVice/FitVice/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\n// Exercise configurations\r\nconst exercises = {\r\n  bicepCurls: {\r\n    name: \"Bicep Curls\",\r\n    instructions: [\r\n      \"Stand with your back straight and arms at your sides\",\r\n      \"Keep your elbows close to your body\",\r\n      \"Curl both arms up until your biceps are fully contracted\",\r\n      \"Lower your arms back down with controlled movement\"\r\n    ],\r\n    landmarks: {\r\n      left: { shoulder: 11, elbow: 13, wrist: 15 },\r\n      right: { shoulder: 12, elbow: 14, wrist: 16 }\r\n    },\r\n    downAngle: 160,\r\n    upAngle: 30\r\n  },\r\n  pushups: {\r\n    name: \"Push-ups\",\r\n    instructions: [\r\n      \"Get into a plank position with hands shoulder-width apart\",\r\n      \"Keep your body straight from head to heels\",\r\n      \"Lower your body until your chest nearly touches the ground\",\r\n      \"Push back up to starting position\"\r\n    ],\r\n    landmarks: {\r\n      left: { shoulder: 11, elbow: 13, wrist: 15 },\r\n      right: { shoulder: 12, elbow: 14, wrist: 16 }\r\n    },\r\n    downAngle: 90,\r\n    upAngle: 30\r\n  },\r\n  squats: {\r\n    name: \"Squats\",\r\n    instructions: [\r\n      \"Stand with feet shoulder-width apart\",\r\n      \"Keep your back straight\",\r\n      \"Lower your body until thighs are parallel to ground\",\r\n      \"Push back up to starting position\"\r\n    ],\r\n    landmarks: {\r\n      left: { shoulder: 23, elbow: 25, wrist: 27 },\r\n      right: { shoulder: 24, elbow: 26, wrist: 28 }\r\n    },\r\n    downAngle: 90,\r\n    upAngle: 30\r\n  },\r\n  shoulderPress: {\r\n    name: \"Shoulder Press\",\r\n    instructions: [\r\n      \"Stand with feet shoulder-width apart\",\r\n      \"Hold weights at shoulder level\",\r\n      \"Press weights overhead until arms are fully extended\",\r\n      \"Lower weights back to shoulder level\"\r\n    ],\r\n    landmarks: {\r\n      left: { shoulder: 11, elbow: 13, wrist: 15 },\r\n      right: { shoulder: 12, elbow: 14, wrist: 16 }\r\n    },\r\n    downAngle: 90,\r\n    upAngle: 30\r\n  }\r\n};\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const lastStageRef = useRef(null);\r\n  const [stage, setStage] = useState(null);\r\n  const [counter, setCounter] = useState(0);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\r\n\r\n  // Reset lastStageRef when changing exercises\r\n  useEffect(() => {\r\n    lastStageRef.current = null;\r\n  }, [selectedExercise]);\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Wait for video to be ready\r\n        await new Promise((resolve) => {\r\n          video.onloadedmetadata = () => {\r\n            video.play();\r\n            resolve();\r\n          };\r\n        });\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import(\"@mediapipe/pose\");\r\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          },\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5,\r\n        });\r\n\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const exercise = exercises[selectedExercise];\r\n\r\n            // Set canvas size to match video\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n\r\n            // Clear the canvas\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            // Save the current context state\r\n            ctx.save();\r\n            // Scale the context horizontally to flip the image\r\n            ctx.scale(-1, 1);\r\n            ctx.translate(-canvas.width, 0);\r\n            // Draw video frame\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n            // Get coordinates\r\n            const shoulder = [\r\n              landmarks[exercise.landmarks.left.shoulder].x,\r\n              landmarks[exercise.landmarks.left.shoulder].y,\r\n            ];\r\n            const elbow = [\r\n              landmarks[exercise.landmarks.left.elbow].x,\r\n              landmarks[exercise.landmarks.left.elbow].y,\r\n            ];\r\n            const wrist = [\r\n              landmarks[exercise.landmarks.left.wrist].x,\r\n              landmarks[exercise.landmarks.left.wrist].y,\r\n            ];\r\n\r\n            // Calculate angle\r\n            let angle;\r\n            if (selectedExercise === \"bicepCurls\") {\r\n              // For bicep curls, calculate joint angle\r\n              angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) -\r\n                Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\r\n              angle = Math.abs((angle * 180.0) / Math.PI);\r\n            } else {\r\n              // For other exercises, calculate vertical angle\r\n              angle = Math.atan2(wrist[1] - shoulder[1], wrist[0] - shoulder[0]);\r\n              angle = Math.abs((angle * 180.0) / Math.PI);\r\n            }\r\n\r\n            if (angle > 180.0) {\r\n              angle = 360 - angle;\r\n            }\r\n\r\n            // Exercise counter logic\r\n            if (selectedExercise === \"bicepCurls\") {\r\n              if (angle > exercise.downAngle) {\r\n                setStage(\"DOWN\");\r\n              }\r\n              if (angle < exercise.upAngle && stage === \"DOWN\") {\r\n                setStage(\"UP\");\r\n                setCounter((prev) => prev + 1);\r\n              }\r\n            } else {\r\n              if (angle < exercise.upAngle) {\r\n                setStage(\"DOWN\");\r\n              }\r\n              if (angle > exercise.downAngle && stage === \"DOWN\") {\r\n                setStage(\"UP\");\r\n                setCounter((prev) => prev + 1);\r\n              }\r\n            }\r\n\r\n            // Calculate form correctness\r\n            let isFormCorrect = false;\r\n            if (selectedExercise === \"bicepCurls\") {\r\n              isFormCorrect = angle <= exercise.upAngle || angle >= exercise.downAngle;\r\n            } else {\r\n              isFormCorrect = angle >= exercise.upAngle && angle <= exercise.downAngle;\r\n            }\r\n\r\n            // Draw landmarks with color based on form\r\n            const lineColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\r\n            const dotColor = isFormCorrect ? \"#00FF00\" : \"#FF0000\";\r\n\r\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\r\n              color: lineColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\r\n              color: dotColor,\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n\r\n            // Restore the context state\r\n            ctx.restore();\r\n\r\n            // Draw angle (outside inverted context)\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              `${Math.round(angle)}Â°`,\r\n              (1 - elbow[0]) * canvas.width,\r\n              elbow[1] * canvas.height\r\n            );\r\n\r\n            // Draw counter and stage (normal orientation)\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            ctx.fillRect(0, 0, 200, 70);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"REPS\", 20, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(counter.toString(), 25, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(stage || \"\", 100, 60);\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, [selectedExercise]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Select Exercise</InputLabel>\r\n                <Select\r\n                  value={selectedExercise}\r\n                  label=\"Select Exercise\"\r\n                  onChange={(e) => {\r\n                    setSelectedExercise(e.target.value);\r\n                    setCounter(0);\r\n                    setStage(null);\r\n                    lastStageRef.current = null;\r\n                  }}\r\n                >\r\n                  {Object.entries(exercises).map(([key, exercise]) => (\r\n                    <MenuItem key={key} value={key}>\r\n                      {exercise.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h5\" fontWeight=\"bold\" color=\"primary\">\r\n                {exercises[selectedExercise].name}\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                Instructions:\r\n              </Typography>\r\n              {exercises[selectedExercise].instructions.map((instruction, index) => (\r\n                <Typography key={index} variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  {index + 1}. {instruction}\r\n                </Typography>\r\n              ))}\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                The tracker will count your reps when you:\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                â¢ Lower past {exercises[selectedExercise].downAngle}Â° (down position)\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                â¢ Move up past {exercises[selectedExercise].upAngle}Â° (up position)\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                maxWidth: \"800px\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"#f9fafb\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  opacity: 0,\r\n                  zIndex: 1,\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"500px\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n              {!isCameraActive && (\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"500px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                    Loading camera...\r\n                  </Typography>\r\n                  <MDButton\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    onClick={() => {\r\n                      setIsCameraActive(true);\r\n                      startCamera();\r\n                    }}\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    Start Camera\r\n                  </MDButton>\r\n                </MDBox>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}