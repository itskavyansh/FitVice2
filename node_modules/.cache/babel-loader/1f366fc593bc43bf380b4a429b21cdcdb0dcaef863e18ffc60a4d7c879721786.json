{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Downloads\\\\dashboard\\\\dashboard\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostureSense() {\n  _s();\n  const videoRef = useRef(null);\n  const [counter, setCounter] = useState(0);\n  const [stage, setStage] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Initialize MediaPipe Pose\n        const mp = await import('@mediapipe/pose');\n        const mp_drawing = await import('@mediapipe/drawing_utils');\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n\n            // Get coordinates\n            const shoulder = [landmarks[11].x,\n            // LEFT_SHOULDER\n            landmarks[11].y];\n            const elbow = [landmarks[13].x,\n            // LEFT_ELBOW\n            landmarks[13].y];\n            const wrist = [landmarks[15].x,\n            // LEFT_WRIST\n            landmarks[15].y];\n\n            // Calculate angle\n            let angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) - Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\n            angle = Math.abs(angle * 180.0 / Math.PI);\n            if (angle > 180.0) {\n              angle = 360 - angle;\n            }\n\n            // Curl counter logic\n            if (angle > 160) {\n              setStage(\"DOWN\");\n            }\n            if (angle < 30 && stage === \"DOWN\") {\n              setStage(\"UP\");\n              setCounter(prev => prev + 1);\n            }\n\n            // Draw landmarks\n            const canvas = document.createElement('canvas');\n            const ctx = canvas.getContext('2d');\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Draw video frame\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\n\n            // Draw landmarks\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\n              color: '#F57542',\n              lineWidth: 2,\n              radius: 2\n            });\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\n              color: '#F542E6',\n              lineWidth: 2,\n              radius: 2\n            });\n\n            // Draw angle\n            ctx.fillStyle = 'white';\n            ctx.font = '20px Arial';\n            ctx.fillText(`${Math.round(angle)}Â°`, elbow[0] * canvas.width, elbow[1] * canvas.height);\n\n            // Draw counter and stage\n            ctx.fillStyle = 'rgba(100, 100, 100, 0.8)';\n            ctx.fillRect(0, 0, 200, 70);\n            ctx.fillStyle = 'black';\n            ctx.font = '16px Arial';\n            ctx.fillText('REPS', 20, 20);\n            ctx.fillStyle = 'white';\n            ctx.font = '24px Arial';\n            ctx.fillText(counter.toString(), 25, 60);\n            ctx.fillStyle = 'black';\n            ctx.font = '16px Arial';\n            ctx.fillText('STAGE', 100, 20);\n            ctx.fillStyle = 'white';\n            ctx.font = '20px Arial';\n            ctx.fillText(stage || '', 100, 60);\n\n            // Update video with canvas\n            video.srcObject = canvas.captureStream();\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, [stage, counter]);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              maxWidth: \"800px\",\n              margin: \"0 auto\",\n              backgroundColor: \"#f9fafb\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              border: \"1px solid rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                width: \"100%\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\"\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              align: \"center\",\n              children: \"Loading camera...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"u9Cq1R+K/4lymIjYA2SJDt2fWzg=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","MDBox","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","PostureSense","_s","videoRef","counter","setCounter","stage","setStage","isCameraActive","setIsCameraActive","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","current","srcObject","mp","mp_drawing","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","landmarks","shoulder","x","y","elbow","wrist","angle","Math","atan2","abs","PI","prev","canvas","document","createElement","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","image","drawConnectors","POSE_CONNECTIONS","color","lineWidth","radius","drawLandmarks","fillStyle","font","fillText","round","fillRect","toString","captureStream","processFrame","send","requestAnimationFrame","error","console","cancelAnimationFrame","getTracks","forEach","track","stop","close","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","sx","position","maxWidth","margin","backgroundColor","borderRadius","padding","border","ref","style","display","autoPlay","playsInline","align","_c","$RefreshReg$"],"sources":["C:/Users/HP/Downloads/dashboard/dashboard/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const [counter, setCounter] = useState(0);\r\n  const [stage, setStage] = useState(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import('@mediapipe/pose');\r\n        const mp_drawing = await import('@mediapipe/drawing_utils');\r\n        \r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          }\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5\r\n        });\r\n\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            \r\n            // Get coordinates\r\n            const shoulder = [\r\n              landmarks[11].x,  // LEFT_SHOULDER\r\n              landmarks[11].y\r\n            ];\r\n            const elbow = [\r\n              landmarks[13].x,  // LEFT_ELBOW\r\n              landmarks[13].y\r\n            ];\r\n            const wrist = [\r\n              landmarks[15].x,  // LEFT_WRIST\r\n              landmarks[15].y\r\n            ];\r\n\r\n            // Calculate angle\r\n            let angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) - \r\n                        Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\r\n            angle = Math.abs(angle * 180.0 / Math.PI);\r\n\r\n            if (angle > 180.0) {\r\n              angle = 360 - angle;\r\n            }\r\n\r\n            // Curl counter logic\r\n            if (angle > 160) {\r\n              setStage(\"DOWN\");\r\n            }\r\n            if (angle < 30 && stage === \"DOWN\") {\r\n              setStage(\"UP\");\r\n              setCounter(prev => prev + 1);\r\n            }\r\n\r\n            // Draw landmarks\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            \r\n            // Draw video frame\r\n            ctx.drawImage(results.image, 0, 0, canvas.width, canvas.height);\r\n            \r\n            // Draw landmarks\r\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\r\n              color: '#F57542',\r\n              lineWidth: 2,\r\n              radius: 2\r\n            });\r\n            \r\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\r\n              color: '#F542E6',\r\n              lineWidth: 2,\r\n              radius: 2\r\n            });\r\n\r\n            // Draw angle\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = '20px Arial';\r\n            ctx.fillText(`${Math.round(angle)}Â°`, elbow[0] * canvas.width, elbow[1] * canvas.height);\r\n\r\n            // Draw counter and stage\r\n            ctx.fillStyle = 'rgba(100, 100, 100, 0.8)';\r\n            ctx.fillRect(0, 0, 200, 70);\r\n            \r\n            ctx.fillStyle = 'black';\r\n            ctx.font = '16px Arial';\r\n            ctx.fillText('REPS', 20, 20);\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = '24px Arial';\r\n            ctx.fillText(counter.toString(), 25, 60);\r\n            \r\n            ctx.fillStyle = 'black';\r\n            ctx.font = '16px Arial';\r\n            ctx.fillText('STAGE', 100, 20);\r\n            ctx.fillStyle = 'white';\r\n            ctx.font = '20px Arial';\r\n            ctx.fillText(stage || '', 100, 60);\r\n\r\n            // Update video with canvas\r\n            video.srcObject = canvas.captureStream();\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach(track => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, [stage, counter]);\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                maxWidth: \"800px\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"#f9fafb\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              {!isCameraActive && (\r\n                <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                  Loading camera...\r\n                </Typography>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}