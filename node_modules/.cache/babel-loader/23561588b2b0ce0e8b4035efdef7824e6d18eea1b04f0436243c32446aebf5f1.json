{"ast":null,"code":"var _jsxFileName = \"D:\\\\FitVice\\\\FitVice\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\n\n// Exercise configurations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercises = {\n  bicepCurls: {\n    name: \"Bicep Curls\",\n    instructions: [\"Stand with your back straight and arms at your sides\", \"Keep your elbows close to your body\", \"Curl both arms up until your biceps are fully contracted\", \"Lower your arms back down with controlled movement\"],\n    tracking: {\n      leftArm: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15,\n        downAngle: 160,\n        upAngle: 30\n      },\n      rightArm: {\n        shoulder: 12,\n        elbow: 14,\n        wrist: 16,\n        downAngle: 160,\n        upAngle: 30\n      }\n    }\n  },\n  squats: {\n    name: \"Squats\",\n    instructions: [\"Stand with feet shoulder-width apart\", \"Keep your back straight\", \"Lower your body until thighs are parallel to ground\", \"Push back up to starting position\"],\n    tracking: {\n      leftLeg: {\n        hip: 23,\n        knee: 25,\n        ankle: 27,\n        downAngle: 160,\n        upAngle: 30\n      },\n      rightLeg: {\n        hip: 24,\n        knee: 26,\n        ankle: 28,\n        downAngle: 160,\n        upAngle: 30\n      }\n    }\n  },\n  shoulderPress: {\n    name: \"Shoulder Press\",\n    instructions: [\"Stand with feet shoulder-width apart\", \"Hold weights at shoulder level\", \"Press weights overhead until arms are fully extended\", \"Lower weights back to shoulder level\"],\n    tracking: {\n      leftArm: {\n        shoulder: 11,\n        elbow: 13,\n        wrist: 15,\n        downAngle: 90,\n        upAngle: 30\n      },\n      rightArm: {\n        shoulder: 12,\n        elbow: 14,\n        wrist: 16,\n        downAngle: 90,\n        upAngle: 30\n      }\n    }\n  }\n};\nfunction PostureSense() {\n  _s();\n  var _exercises$selectedEx, _exercises$selectedEx2, _exercises$selectedEx3, _exercises$selectedEx4;\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const stageRef = useRef(null);\n  const counterRef = useRef(0);\n  const [displayCounter, setDisplayCounter] = useState(0);\n  const [displayStage, setDisplayStage] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\n  const [leftStage, setLeftStage] = useState(null);\n  const [rightStage, setRightStage] = useState(null);\n  const [leftCounter, setLeftCounter] = useState(0);\n  const [rightCounter, setRightCounter] = useState(0);\n  const [leftAngle, setLeftAngle] = useState(0);\n  const [rightAngle, setRightAngle] = useState(0);\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          video.onloadedmetadata = () => {\n            video.play();\n            resolve();\n          };\n        });\n\n        // Initialize MediaPipe Pose\n        const mp = await import(\"@mediapipe/pose\");\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n\n        // Set up pose detection callback\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            const exercise = exercises[selectedExercise];\n\n            // Set canvas size to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n\n            // Draw video frame\n            ctx.save();\n            ctx.scale(-1, 1);\n            ctx.translate(-canvas.width, 0);\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n            ctx.restore();\n\n            // Track left side\n            const leftConfig = exercise.tracking.leftArm || exercise.tracking.leftLeg;\n            const leftAngle = calculateAngle(landmarks, leftConfig.shoulder || leftConfig.hip, leftConfig.elbow || leftConfig.knee, leftConfig.wrist || leftConfig.ankle);\n            setLeftAngle(leftAngle);\n\n            // Track right side\n            const rightConfig = exercise.tracking.rightArm || exercise.tracking.rightLeg;\n            const rightAngle = calculateAngle(landmarks, rightConfig.shoulder || rightConfig.hip, rightConfig.elbow || rightConfig.knee, rightConfig.wrist || rightConfig.ankle);\n            setRightAngle(rightAngle);\n\n            // Update counters based on exercise configuration\n            if (leftAngle > leftConfig.downAngle) {\n              setLeftStage(\"DOWN\");\n            }\n            if (leftAngle < leftConfig.upAngle && leftStage === \"DOWN\") {\n              setLeftStage(\"UP\");\n              setLeftCounter(prev => prev + 1);\n            }\n            if (rightAngle > rightConfig.downAngle) {\n              setRightStage(\"DOWN\");\n            }\n            if (rightAngle < rightConfig.upAngle && rightStage === \"DOWN\") {\n              setRightStage(\"UP\");\n              setRightCounter(prev => prev + 1);\n            }\n\n            // Draw landmarks and angles\n            ctx.save();\n            ctx.scale(-1, 1);\n            ctx.translate(-canvas.width, 0);\n\n            // Draw left side landmarks\n            ctx.beginPath();\n            ctx.moveTo(landmarks[leftConfig.shoulder || leftConfig.hip].x * canvas.width, landmarks[leftConfig.shoulder || leftConfig.hip].y * canvas.height);\n            ctx.lineTo(landmarks[leftConfig.elbow || leftConfig.knee].x * canvas.width, landmarks[leftConfig.elbow || leftConfig.knee].y * canvas.height);\n            ctx.lineTo(landmarks[leftConfig.wrist || leftConfig.ankle].x * canvas.width, landmarks[leftConfig.wrist || leftConfig.ankle].y * canvas.height);\n            ctx.strokeStyle = \"#00ff00\";\n            ctx.lineWidth = 2;\n            ctx.stroke();\n\n            // Draw right side landmarks\n            ctx.beginPath();\n            ctx.moveTo(landmarks[rightConfig.shoulder || rightConfig.hip].x * canvas.width, landmarks[rightConfig.shoulder || rightConfig.hip].y * canvas.height);\n            ctx.lineTo(landmarks[rightConfig.elbow || rightConfig.knee].x * canvas.width, landmarks[rightConfig.elbow || rightConfig.knee].y * canvas.height);\n            ctx.lineTo(landmarks[rightConfig.wrist || rightConfig.ankle].x * canvas.width, landmarks[rightConfig.wrist || rightConfig.ankle].y * canvas.height);\n            ctx.strokeStyle = \"#ff0000\";\n            ctx.lineWidth = 2;\n            ctx.stroke();\n\n            // Draw angles\n            ctx.font = \"16px Arial\";\n            ctx.fillStyle = \"#00ff00\";\n            ctx.fillText(`Left: ${Math.round(leftAngle)}°`, 20, 30);\n            ctx.fillStyle = \"#ff0000\";\n            ctx.fillText(`Right: ${Math.round(rightAngle)}°`, canvas.width - 100, 30);\n            ctx.restore();\n\n            // Draw counter and stage (normal orientation)\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            // Left side counter and stage\n            ctx.fillRect(0, 0, 200, 70);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"LEFT REPS\", 20, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(leftCounter.toString(), 25, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(leftStage || \"\", 100, 60);\n\n            // Right side counter and stage\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            ctx.fillRect(canvas.width - 200, 0, 200, 70);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"RIGHT REPS\", canvas.width - 180, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(rightCounter.toString(), canvas.width - 175, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", canvas.width - 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(rightStage || \"\", canvas.width - 100, 60);\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, [selectedExercise]); // Add selectedExercise to dependencies\n\n  const calculateAngle = (landmarks, shoulder, elbow, wrist) => {\n    const shoulderPoint = [landmarks[shoulder].x * canvasRef.current.width, landmarks[shoulder].y * canvasRef.current.height];\n    const elbowPoint = [landmarks[elbow].x * canvasRef.current.width, landmarks[elbow].y * canvasRef.current.height];\n    const wristPoint = [landmarks[wrist].x * canvasRef.current.width, landmarks[wrist].y * canvasRef.current.height];\n    const angle = Math.atan2(wristPoint[1] - elbowPoint[1], wristPoint[0] - elbowPoint[0]) - Math.atan2(shoulderPoint[1] - elbowPoint[1], shoulderPoint[0] - elbowPoint[0]);\n    let degrees = Math.abs(angle * 180.0 / Math.PI);\n    if (degrees > 180.0) degrees = 360 - degrees;\n    return degrees;\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Select Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedExercise,\n                label: \"Select Exercise\",\n                onChange: e => {\n                  setSelectedExercise(e.target.value);\n                  setLeftCounter(0);\n                  setRightCounter(0);\n                  setLeftStage(null);\n                  setRightStage(null);\n                },\n                children: Object.entries(exercises).map(([key, exercise]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: key,\n                  children: exercise.name\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              fontWeight: \"bold\",\n              color: \"primary\",\n              children: exercises[selectedExercise].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this), exercises[selectedExercise].instructions.map((instruction, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [index + 1, \". \", instruction]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: \"The tracker will count your reps when you:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 1\n              },\n              children: [\"\\u2022 Lower past \", ((_exercises$selectedEx = exercises[selectedExercise].tracking.leftArm) === null || _exercises$selectedEx === void 0 ? void 0 : _exercises$selectedEx.downAngle) || ((_exercises$selectedEx2 = exercises[selectedExercise].tracking.leftLeg) === null || _exercises$selectedEx2 === void 0 ? void 0 : _exercises$selectedEx2.downAngle), \"\\xB0 (down position)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"\\u2022 Move up past \", ((_exercises$selectedEx3 = exercises[selectedExercise].tracking.leftArm) === null || _exercises$selectedEx3 === void 0 ? void 0 : _exercises$selectedEx3.upAngle) || ((_exercises$selectedEx4 = exercises[selectedExercise].tracking.leftLeg) === null || _exercises$selectedEx4 === void 0 ? void 0 : _exercises$selectedEx4.upAngle), \"\\xB0 (up position)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              maxWidth: \"800px\",\n              margin: \"0 auto\",\n              backgroundColor: \"#f9fafb\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              border: \"1px solid rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                opacity: 0,\n                zIndex: 1\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: \"100%\",\n                height: \"500px\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\",\n                position: \"relative\",\n                zIndex: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                align: \"center\",\n                children: \"Loading camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                variant: \"contained\",\n                color: \"info\",\n                onClick: () => {\n                  setIsCameraActive(true);\n                  startCamera();\n                },\n                sx: {\n                  mt: 2\n                },\n                children: \"Start Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"ZTTASxIYlWrFItBfPQIYltjoB2Q=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","Card","Box","Select","MenuItem","FormControl","InputLabel","MDBox","MDButton","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","exercises","bicepCurls","name","instructions","tracking","leftArm","shoulder","elbow","wrist","downAngle","upAngle","rightArm","squats","leftLeg","hip","knee","ankle","rightLeg","shoulderPress","PostureSense","_s","_exercises$selectedEx","_exercises$selectedEx2","_exercises$selectedEx3","_exercises$selectedEx4","videoRef","canvasRef","stageRef","counterRef","displayCounter","setDisplayCounter","displayStage","setDisplayStage","isCameraActive","setIsCameraActive","selectedExercise","setSelectedExercise","leftStage","setLeftStage","rightStage","setRightStage","leftCounter","setLeftCounter","rightCounter","setRightCounter","leftAngle","setLeftAngle","rightAngle","setRightAngle","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","current","srcObject","Promise","resolve","onloadedmetadata","play","mp","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","landmarks","canvas","ctx","getContext","exercise","width","videoWidth","height","videoHeight","save","scale","translate","drawImage","restore","leftConfig","calculateAngle","rightConfig","prev","beginPath","moveTo","x","y","lineTo","strokeStyle","lineWidth","stroke","font","fillStyle","fillText","Math","round","fillRect","toString","processFrame","readyState","HAVE_ENOUGH_DATA","send","image","requestAnimationFrame","error","console","cancelAnimationFrame","getTracks","forEach","track","stop","close","shoulderPoint","elbowPoint","wristPoint","angle","atan2","degrees","abs","PI","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","color","fullWidth","value","label","onChange","e","target","Object","entries","map","key","sx","mt","instruction","index","position","maxWidth","margin","backgroundColor","borderRadius","padding","border","ref","style","objectFit","opacity","zIndex","autoPlay","playsInline","display","flexDirection","alignItems","justifyContent","align","onClick","_c","$RefreshReg$"],"sources":["D:/FitVice/FitVice/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\n// Exercise configurations\r\nconst exercises = {\r\n  bicepCurls: {\r\n    name: \"Bicep Curls\",\r\n    instructions: [\r\n      \"Stand with your back straight and arms at your sides\",\r\n      \"Keep your elbows close to your body\",\r\n      \"Curl both arms up until your biceps are fully contracted\",\r\n      \"Lower your arms back down with controlled movement\"\r\n    ],\r\n    tracking: {\r\n      leftArm: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15,\r\n        downAngle: 160,\r\n        upAngle: 30\r\n      },\r\n      rightArm: {\r\n        shoulder: 12,\r\n        elbow: 14,\r\n        wrist: 16,\r\n        downAngle: 160,\r\n        upAngle: 30\r\n      }\r\n    }\r\n  },\r\n  squats: {\r\n    name: \"Squats\",\r\n    instructions: [\r\n      \"Stand with feet shoulder-width apart\",\r\n      \"Keep your back straight\",\r\n      \"Lower your body until thighs are parallel to ground\",\r\n      \"Push back up to starting position\"\r\n    ],\r\n    tracking: {\r\n      leftLeg: {\r\n        hip: 23,\r\n        knee: 25,\r\n        ankle: 27,\r\n        downAngle: 160,\r\n        upAngle: 30\r\n      },\r\n      rightLeg: {\r\n        hip: 24,\r\n        knee: 26,\r\n        ankle: 28,\r\n        downAngle: 160,\r\n        upAngle: 30\r\n      }\r\n    }\r\n  },\r\n  shoulderPress: {\r\n    name: \"Shoulder Press\",\r\n    instructions: [\r\n      \"Stand with feet shoulder-width apart\",\r\n      \"Hold weights at shoulder level\",\r\n      \"Press weights overhead until arms are fully extended\",\r\n      \"Lower weights back to shoulder level\"\r\n    ],\r\n    tracking: {\r\n      leftArm: {\r\n        shoulder: 11,\r\n        elbow: 13,\r\n        wrist: 15,\r\n        downAngle: 90,\r\n        upAngle: 30\r\n      },\r\n      rightArm: {\r\n        shoulder: 12,\r\n        elbow: 14,\r\n        wrist: 16,\r\n        downAngle: 90,\r\n        upAngle: 30\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const stageRef = useRef(null);\r\n  const counterRef = useRef(0);\r\n  const [displayCounter, setDisplayCounter] = useState(0);\r\n  const [displayStage, setDisplayStage] = useState(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [selectedExercise, setSelectedExercise] = useState(\"bicepCurls\");\r\n  const [leftStage, setLeftStage] = useState(null);\r\n  const [rightStage, setRightStage] = useState(null);\r\n  const [leftCounter, setLeftCounter] = useState(0);\r\n  const [rightCounter, setRightCounter] = useState(0);\r\n  const [leftAngle, setLeftAngle] = useState(0);\r\n  const [rightAngle, setRightAngle] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Wait for video to be ready\r\n        await new Promise((resolve) => {\r\n          video.onloadedmetadata = () => {\r\n            video.play();\r\n            resolve();\r\n          };\r\n        });\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import(\"@mediapipe/pose\");\r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          },\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5,\r\n        });\r\n\r\n        // Set up pose detection callback\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            const exercise = exercises[selectedExercise];\r\n\r\n            // Set canvas size to match video\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n\r\n            // Draw video frame\r\n            ctx.save();\r\n            ctx.scale(-1, 1);\r\n            ctx.translate(-canvas.width, 0);\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            ctx.restore();\r\n\r\n            // Track left side\r\n            const leftConfig = exercise.tracking.leftArm || exercise.tracking.leftLeg;\r\n            const leftAngle = calculateAngle(\r\n              landmarks,\r\n              leftConfig.shoulder || leftConfig.hip,\r\n              leftConfig.elbow || leftConfig.knee,\r\n              leftConfig.wrist || leftConfig.ankle\r\n            );\r\n            setLeftAngle(leftAngle);\r\n\r\n            // Track right side\r\n            const rightConfig = exercise.tracking.rightArm || exercise.tracking.rightLeg;\r\n            const rightAngle = calculateAngle(\r\n              landmarks,\r\n              rightConfig.shoulder || rightConfig.hip,\r\n              rightConfig.elbow || rightConfig.knee,\r\n              rightConfig.wrist || rightConfig.ankle\r\n            );\r\n            setRightAngle(rightAngle);\r\n\r\n            // Update counters based on exercise configuration\r\n            if (leftAngle > leftConfig.downAngle) {\r\n              setLeftStage(\"DOWN\");\r\n            }\r\n            if (leftAngle < leftConfig.upAngle && leftStage === \"DOWN\") {\r\n              setLeftStage(\"UP\");\r\n              setLeftCounter((prev) => prev + 1);\r\n            }\r\n\r\n            if (rightAngle > rightConfig.downAngle) {\r\n              setRightStage(\"DOWN\");\r\n            }\r\n            if (rightAngle < rightConfig.upAngle && rightStage === \"DOWN\") {\r\n              setRightStage(\"UP\");\r\n              setRightCounter((prev) => prev + 1);\r\n            }\r\n\r\n            // Draw landmarks and angles\r\n            ctx.save();\r\n            ctx.scale(-1, 1);\r\n            ctx.translate(-canvas.width, 0);\r\n\r\n            // Draw left side landmarks\r\n            ctx.beginPath();\r\n            ctx.moveTo(\r\n              landmarks[leftConfig.shoulder || leftConfig.hip].x * canvas.width,\r\n              landmarks[leftConfig.shoulder || leftConfig.hip].y * canvas.height\r\n            );\r\n            ctx.lineTo(\r\n              landmarks[leftConfig.elbow || leftConfig.knee].x * canvas.width,\r\n              landmarks[leftConfig.elbow || leftConfig.knee].y * canvas.height\r\n            );\r\n            ctx.lineTo(\r\n              landmarks[leftConfig.wrist || leftConfig.ankle].x * canvas.width,\r\n              landmarks[leftConfig.wrist || leftConfig.ankle].y * canvas.height\r\n            );\r\n            ctx.strokeStyle = \"#00ff00\";\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n\r\n            // Draw right side landmarks\r\n            ctx.beginPath();\r\n            ctx.moveTo(\r\n              landmarks[rightConfig.shoulder || rightConfig.hip].x * canvas.width,\r\n              landmarks[rightConfig.shoulder || rightConfig.hip].y * canvas.height\r\n            );\r\n            ctx.lineTo(\r\n              landmarks[rightConfig.elbow || rightConfig.knee].x * canvas.width,\r\n              landmarks[rightConfig.elbow || rightConfig.knee].y * canvas.height\r\n            );\r\n            ctx.lineTo(\r\n              landmarks[rightConfig.wrist || rightConfig.ankle].x * canvas.width,\r\n              landmarks[rightConfig.wrist || rightConfig.ankle].y * canvas.height\r\n            );\r\n            ctx.strokeStyle = \"#ff0000\";\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n\r\n            // Draw angles\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillStyle = \"#00ff00\";\r\n            ctx.fillText(`Left: ${Math.round(leftAngle)}°`, 20, 30);\r\n            ctx.fillStyle = \"#ff0000\";\r\n            ctx.fillText(`Right: ${Math.round(rightAngle)}°`, canvas.width - 100, 30);\r\n\r\n            ctx.restore();\r\n\r\n            // Draw counter and stage (normal orientation)\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            // Left side counter and stage\r\n            ctx.fillRect(0, 0, 200, 70);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"LEFT REPS\", 20, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(leftCounter.toString(), 25, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(leftStage || \"\", 100, 60);\r\n\r\n            // Right side counter and stage\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            ctx.fillRect(canvas.width - 200, 0, 200, 70);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"RIGHT REPS\", canvas.width - 180, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(rightCounter.toString(), canvas.width - 175, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", canvas.width - 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(rightStage || \"\", canvas.width - 100, 60);\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, [selectedExercise]); // Add selectedExercise to dependencies\r\n\r\n  const calculateAngle = (landmarks, shoulder, elbow, wrist) => {\r\n    const shoulderPoint = [\r\n      landmarks[shoulder].x * canvasRef.current.width,\r\n      landmarks[shoulder].y * canvasRef.current.height,\r\n    ];\r\n    const elbowPoint = [\r\n      landmarks[elbow].x * canvasRef.current.width,\r\n      landmarks[elbow].y * canvasRef.current.height,\r\n    ];\r\n    const wristPoint = [\r\n      landmarks[wrist].x * canvasRef.current.width,\r\n      landmarks[wrist].y * canvasRef.current.height,\r\n    ];\r\n\r\n    const angle = Math.atan2(wristPoint[1] - elbowPoint[1], wristPoint[0] - elbowPoint[0]) -\r\n      Math.atan2(shoulderPoint[1] - elbowPoint[1], shoulderPoint[0] - elbowPoint[0]);\r\n\r\n    let degrees = Math.abs((angle * 180.0) / Math.PI);\r\n    if (degrees > 180.0) degrees = 360 - degrees;\r\n    return degrees;\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Select Exercise</InputLabel>\r\n                <Select\r\n                  value={selectedExercise}\r\n                  label=\"Select Exercise\"\r\n                  onChange={(e) => {\r\n                    setSelectedExercise(e.target.value);\r\n                    setLeftCounter(0);\r\n                    setRightCounter(0);\r\n                    setLeftStage(null);\r\n                    setRightStage(null);\r\n                  }}\r\n                >\r\n                  {Object.entries(exercises).map(([key, exercise]) => (\r\n                    <MenuItem key={key} value={key}>\r\n                      {exercise.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h5\" fontWeight=\"bold\" color=\"primary\">\r\n                {exercises[selectedExercise].name}\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                Instructions:\r\n              </Typography>\r\n              {exercises[selectedExercise].instructions.map((instruction, index) => (\r\n                <Typography key={index} variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  {index + 1}. {instruction}\r\n                </Typography>\r\n              ))}\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                The tracker will count your reps when you:\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                • Lower past {exercises[selectedExercise].tracking.leftArm?.downAngle || exercises[selectedExercise].tracking.leftLeg?.downAngle}° (down position)\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                • Move up past {exercises[selectedExercise].tracking.leftArm?.upAngle || exercises[selectedExercise].tracking.leftLeg?.upAngle}° (up position)\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                maxWidth: \"800px\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"#f9fafb\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  opacity: 0,\r\n                  zIndex: 1,\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"500px\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n              {!isCameraActive && (\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"500px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                    Loading camera...\r\n                  </Typography>\r\n                  <MDButton\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    onClick={() => {\r\n                      setIsCameraActive(true);\r\n                      startCamera();\r\n                    }}\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    Start Camera\r\n                  </MDButton>\r\n                </MDBox>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}