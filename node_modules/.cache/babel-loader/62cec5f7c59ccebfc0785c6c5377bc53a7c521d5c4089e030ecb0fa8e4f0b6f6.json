{"ast":null,"code":"var _jsxFileName = \"D:\\\\FitVice\\\\FitVice\\\\src\\\\layouts\\\\posture-sense\\\\index.js\",\n  _s = $RefreshSig$();\n/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\n\n// @mui material components\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { useEffect, useRef, useState } from \"react\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDButton from \"components/MDButton\";\n\n// Material Dashboard 2 React example components\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostureSense() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const stageRef = useRef(null);\n  const counterRef = useRef(0);\n  const [displayCounter, setDisplayCounter] = useState(0);\n  const [displayStage, setDisplayStage] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  useEffect(() => {\n    let video = null;\n    let pose = null;\n    let animationFrame = null;\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        video = videoRef.current;\n        video.srcObject = stream;\n\n        // Wait for video to be ready\n        await new Promise(resolve => {\n          video.onloadedmetadata = () => {\n            video.play();\n            resolve();\n          };\n        });\n\n        // Initialize MediaPipe Pose\n        const mp = await import(\"@mediapipe/pose\");\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\n        pose = new mp.Pose({\n          locateFile: file => {\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\n          }\n        });\n        pose.setOptions({\n          modelComplexity: 1,\n          smoothLandmarks: true,\n          minDetectionConfidence: 0.5,\n          minTrackingConfidence: 0.5\n        });\n        pose.onResults(results => {\n          if (results.poseLandmarks) {\n            const landmarks = results.poseLandmarks;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext(\"2d\");\n            // Set canvas size to match video\n            canvas.width = video.videoWidth;\n            canvas.height = video.videoHeight;\n            // Draw video frame\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n            // Get coordinates\n            const shoulder = [landmarks[11].x,\n            // LEFT_SHOULDER\n            landmarks[11].y];\n            const elbow = [landmarks[13].x,\n            // LEFT_ELBOW\n            landmarks[13].y];\n            const wrist = [landmarks[15].x,\n            // LEFT_WRIST\n            landmarks[15].y];\n\n            // Calculate angle\n            let angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) - Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\n            angle = Math.abs(angle * 180.0 / Math.PI);\n            if (angle > 180.0) {\n              angle = 360 - angle;\n            }\n\n            // Curl counter logic\n            if (angle > 160) {\n              stageRef.current = \"DOWN\";\n              setDisplayStage(\"DOWN\");\n            }\n            if (angle < 30 && stageRef.current === \"DOWN\") {\n              stageRef.current = \"UP\";\n              setDisplayStage(\"UP\");\n              counterRef.current += 1;\n              setDisplayCounter(counterRef.current);\n            }\n\n            // Draw landmarks\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\n              color: \"#F57542\",\n              lineWidth: 2,\n              radius: 2\n            });\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\n              color: \"#F542E6\",\n              lineWidth: 2,\n              radius: 2\n            });\n\n            // Draw angle\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(`${Math.round(angle)}Â°`, elbow[0] * canvas.width, elbow[1] * canvas.height);\n\n            // Save the current context state\n            ctx.save();\n\n            // Reset the transform for the counter and stage display\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n            // Draw counter and stage\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\n            ctx.fillRect(0, 0, 200, 70);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"REPS\", 20, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"24px Arial\";\n            ctx.fillText(counterRef.current.toString(), 25, 60);\n            ctx.fillStyle = \"black\";\n            ctx.font = \"16px Arial\";\n            ctx.fillText(\"STAGE\", 100, 20);\n            ctx.fillStyle = \"white\";\n            ctx.font = \"20px Arial\";\n            ctx.fillText(stageRef.current || \"\", 100, 60);\n\n            // Restore the context state\n            ctx.restore();\n          }\n        });\n\n        // Start processing\n        const processFrame = async () => {\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\n            await pose.send({\n              image: video\n            });\n            animationFrame = requestAnimationFrame(processFrame);\n          }\n        };\n        processFrame();\n        setIsCameraActive(true);\n      } catch (error) {\n        console.error(\"Error accessing camera:\", error);\n      }\n    };\n    startCamera();\n    return () => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame);\n      }\n      if (video && video.srcObject) {\n        video.srcObject.getTracks().forEach(track => track.stop());\n      }\n      if (pose) {\n        pose.close();\n      }\n      setIsCameraActive(false);\n    };\n  }, []); // Remove stage and counter from dependencies\n\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBox, {\n      py: 3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              fontWeight: \"bold\",\n              children: \"PostureSense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              color: \"text.secondary\",\n              children: \"Real-time pose detection and exercise tracking\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(MDBox, {\n            sx: {\n              position: \"relative\",\n              width: \"100%\",\n              maxWidth: \"800px\",\n              margin: \"0 auto\",\n              backgroundColor: \"#f9fafb\",\n              borderRadius: \"12px\",\n              padding: \"24px\",\n              border: \"1px solid rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                position: \"absolute\",\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"cover\",\n                opacity: 0,\n                zIndex: 1,\n                transform: \"scaleX(-1)\"\n              },\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: \"100%\",\n                height: \"500px\",\n                borderRadius: \"12px\",\n                display: isCameraActive ? \"block\" : \"none\",\n                position: \"relative\",\n                zIndex: 2,\n                transform: \"scaleX(-1)\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), !isCameraActive && /*#__PURE__*/_jsxDEV(MDBox, {\n              sx: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                height: \"500px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"text.secondary\",\n                align: \"center\",\n                children: \"Loading camera...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MDButton, {\n                variant: \"contained\",\n                color: \"info\",\n                onClick: () => {\n                  setIsCameraActive(true);\n                  startCamera();\n                },\n                sx: {\n                  mt: 2\n                },\n                children: \"Start Camera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(PostureSense, \"7cQEXC6Sw2sGcmJOsH2GRbzOACg=\");\n_c = PostureSense;\nexport default PostureSense;\nvar _c;\n$RefreshReg$(_c, \"PostureSense\");","map":{"version":3,"names":["Grid","Typography","useEffect","useRef","useState","MDBox","MDButton","DashboardLayout","DashboardNavbar","Footer","jsxDEV","_jsxDEV","PostureSense","_s","videoRef","canvasRef","stageRef","counterRef","displayCounter","setDisplayCounter","displayStage","setDisplayStage","isCameraActive","setIsCameraActive","video","pose","animationFrame","startCamera","stream","navigator","mediaDevices","getUserMedia","current","srcObject","Promise","resolve","onloadedmetadata","play","mp","mp_drawing","Pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","minDetectionConfidence","minTrackingConfidence","onResults","results","poseLandmarks","landmarks","canvas","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","shoulder","x","y","elbow","wrist","angle","Math","atan2","abs","PI","drawConnectors","POSE_CONNECTIONS","color","lineWidth","radius","drawLandmarks","fillStyle","font","fillText","round","save","setTransform","fillRect","toString","restore","processFrame","readyState","HAVE_ENOUGH_DATA","send","image","requestAnimationFrame","error","console","cancelAnimationFrame","getTracks","forEach","track","stop","close","children","fileName","_jsxFileName","lineNumber","columnNumber","py","container","spacing","item","xs","mb","variant","fontWeight","sx","position","maxWidth","margin","backgroundColor","borderRadius","padding","border","ref","style","objectFit","opacity","zIndex","transform","autoPlay","playsInline","display","flexDirection","alignItems","justifyContent","align","onClick","mt","_c","$RefreshReg$"],"sources":["D:/FitVice/FitVice/src/layouts/posture-sense/index.js"],"sourcesContent":["/**\r\n=========================================================\r\n* Material Dashboard 2 React - v2.2.0\r\n=========================================================\r\n*/\r\n\r\n// @mui material components\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\n// Material Dashboard 2 React components\r\nimport MDBox from \"components/MDBox\";\r\nimport MDButton from \"components/MDButton\";\r\n\r\n// Material Dashboard 2 React example components\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\n\r\nfunction PostureSense() {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const stageRef = useRef(null);\r\n  const counterRef = useRef(0);\r\n  const [displayCounter, setDisplayCounter] = useState(0);\r\n  const [displayStage, setDisplayStage] = useState(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let video = null;\r\n    let pose = null;\r\n    let animationFrame = null;\r\n\r\n    const startCamera = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        video = videoRef.current;\r\n        video.srcObject = stream;\r\n\r\n        // Wait for video to be ready\r\n        await new Promise((resolve) => {\r\n          video.onloadedmetadata = () => {\r\n            video.play();\r\n            resolve();\r\n          };\r\n        });\r\n\r\n        // Initialize MediaPipe Pose\r\n        const mp = await import(\"@mediapipe/pose\");\r\n        const mp_drawing = await import(\"@mediapipe/drawing_utils\");\r\n        pose = new mp.Pose({\r\n          locateFile: (file) => {\r\n            return `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`;\r\n          },\r\n        });\r\n\r\n        pose.setOptions({\r\n          modelComplexity: 1,\r\n          smoothLandmarks: true,\r\n          minDetectionConfidence: 0.5,\r\n          minTrackingConfidence: 0.5,\r\n        });\r\n\r\n        pose.onResults((results) => {\r\n          if (results.poseLandmarks) {\r\n            const landmarks = results.poseLandmarks;\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            // Set canvas size to match video\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            // Draw video frame\r\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            // Get coordinates\r\n            const shoulder = [\r\n              landmarks[11].x, // LEFT_SHOULDER\r\n              landmarks[11].y,\r\n            ];\r\n            const elbow = [\r\n              landmarks[13].x, // LEFT_ELBOW\r\n              landmarks[13].y,\r\n            ];\r\n            const wrist = [\r\n              landmarks[15].x, // LEFT_WRIST\r\n              landmarks[15].y,\r\n            ];\r\n\r\n            // Calculate angle\r\n            let angle = Math.atan2(wrist[1] - elbow[1], wrist[0] - elbow[0]) -\r\n              Math.atan2(shoulder[1] - elbow[1], shoulder[0] - elbow[0]);\r\n            angle = Math.abs((angle * 180.0) / Math.PI);\r\n\r\n            if (angle > 180.0) {\r\n              angle = 360 - angle;\r\n            }\r\n\r\n            // Curl counter logic\r\n            if (angle > 160) {\r\n              stageRef.current = \"DOWN\";\r\n              setDisplayStage(\"DOWN\");\r\n            }\r\n            if (angle < 30 && stageRef.current === \"DOWN\") {\r\n              stageRef.current = \"UP\";\r\n              setDisplayStage(\"UP\");\r\n              counterRef.current += 1;\r\n              setDisplayCounter(counterRef.current);\r\n            }\r\n\r\n            // Draw landmarks\r\n            mp_drawing.drawConnectors(ctx, results.poseLandmarks, mp.POSE_CONNECTIONS, {\r\n              color: \"#F57542\",\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n            mp_drawing.drawLandmarks(ctx, results.poseLandmarks, {\r\n              color: \"#F542E6\",\r\n              lineWidth: 2,\r\n              radius: 2,\r\n            });\r\n\r\n            // Draw angle\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(\r\n              `${Math.round(angle)}Â°`,\r\n              elbow[0] * canvas.width,\r\n              elbow[1] * canvas.height\r\n            );\r\n\r\n            // Save the current context state\r\n            ctx.save();\r\n            \r\n            // Reset the transform for the counter and stage display\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n            // Draw counter and stage\r\n            ctx.fillStyle = \"rgba(100, 100, 100, 0.8)\";\r\n            ctx.fillRect(0, 0, 200, 70);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"REPS\", 20, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"24px Arial\";\r\n            ctx.fillText(counterRef.current.toString(), 25, 60);\r\n            ctx.fillStyle = \"black\";\r\n            ctx.font = \"16px Arial\";\r\n            ctx.fillText(\"STAGE\", 100, 20);\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"20px Arial\";\r\n            ctx.fillText(stageRef.current || \"\", 100, 60);\r\n\r\n            // Restore the context state\r\n            ctx.restore();\r\n          }\r\n        });\r\n\r\n        // Start processing\r\n        const processFrame = async () => {\r\n          if (video && pose && video.readyState === video.HAVE_ENOUGH_DATA) {\r\n            await pose.send({ image: video });\r\n            animationFrame = requestAnimationFrame(processFrame);\r\n          }\r\n        };\r\n\r\n        processFrame();\r\n        setIsCameraActive(true);\r\n      } catch (error) {\r\n        console.error(\"Error accessing camera:\", error);\r\n      }\r\n    };\r\n\r\n    startCamera();\r\n\r\n    return () => {\r\n      if (animationFrame) {\r\n        cancelAnimationFrame(animationFrame);\r\n      }\r\n      if (video && video.srcObject) {\r\n        video.srcObject.getTracks().forEach((track) => track.stop());\r\n      }\r\n      if (pose) {\r\n        pose.close();\r\n      }\r\n      setIsCameraActive(false);\r\n    };\r\n  }, []); // Remove stage and counter from dependencies\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <DashboardNavbar />\r\n      <MDBox py={3}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MDBox mb={3}>\r\n              <Typography variant=\"h4\" fontWeight=\"bold\">\r\n                PostureSense\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Real-time pose detection and exercise tracking\r\n              </Typography>\r\n            </MDBox>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <MDBox\r\n              sx={{\r\n                position: \"relative\",\r\n                width: \"100%\",\r\n                maxWidth: \"800px\",\r\n                margin: \"0 auto\",\r\n                backgroundColor: \"#f9fafb\",\r\n                borderRadius: \"12px\",\r\n                padding: \"24px\",\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n              }}\r\n            >\r\n              <video\r\n                ref={videoRef}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  objectFit: \"cover\",\r\n                  opacity: 0,\r\n                  zIndex: 1,\r\n                  transform: \"scaleX(-1)\",\r\n                }}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"500px\",\r\n                  borderRadius: \"12px\",\r\n                  display: isCameraActive ? \"block\" : \"none\",\r\n                  position: \"relative\",\r\n                  zIndex: 2,\r\n                  transform: \"scaleX(-1)\",\r\n                }}\r\n              />\r\n              {!isCameraActive && (\r\n                <MDBox\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    height: \"500px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" color=\"text.secondary\" align=\"center\">\r\n                    Loading camera...\r\n                  </Typography>\r\n                  <MDButton\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    onClick={() => {\r\n                      setIsCameraActive(true);\r\n                      startCamera();\r\n                    }}\r\n                    sx={{ mt: 2 }}\r\n                  >\r\n                    Start Camera\r\n                  </MDButton>\r\n                </MDBox>\r\n              )}\r\n            </MDBox>\r\n          </Grid>\r\n        </Grid>\r\n      </MDBox>\r\n      <Footer />\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default PostureSense; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}